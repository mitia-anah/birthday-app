{"version":3,"sources":["component/element.js","component/destroyPopup.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/addDays/index.js","node_modules/date-fns/esm/addMonths/index.js","node_modules/date-fns/esm/add/index.js","node_modules/date-fns/esm/isWeekend/index.js","node_modules/date-fns/esm/isSunday/index.js","node_modules/date-fns/esm/isSaturday/index.js","node_modules/date-fns/esm/addBusinessDays/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/addHours/index.js","node_modules/date-fns/esm/startOfWeek/index.js","node_modules/date-fns/esm/startOfISOWeek/index.js","node_modules/date-fns/esm/getISOWeekYear/index.js","node_modules/date-fns/esm/startOfISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/startOfDay/index.js","node_modules/date-fns/esm/differenceInCalendarDays/index.js","node_modules/date-fns/esm/setISOWeekYear/index.js","node_modules/date-fns/esm/addISOWeekYears/index.js","node_modules/date-fns/esm/addMinutes/index.js","node_modules/date-fns/esm/addQuarters/index.js","node_modules/date-fns/esm/addSeconds/index.js","node_modules/date-fns/esm/addWeeks/index.js","node_modules/date-fns/esm/addYears/index.js","node_modules/date-fns/esm/areIntervalsOverlapping/index.js","node_modules/date-fns/esm/closestIndexTo/index.js","node_modules/date-fns/esm/closestTo/index.js","node_modules/date-fns/esm/compareAsc/index.js","node_modules/date-fns/esm/compareDesc/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/isSameDay/index.js","node_modules/date-fns/esm/differenceInBusinessDays/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarMonths/index.js","node_modules/date-fns/esm/getQuarter/index.js","node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarYears/index.js","node_modules/date-fns/esm/differenceInDays/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/differenceInHours/index.js","node_modules/date-fns/esm/subISOWeekYears/index.js","node_modules/date-fns/esm/differenceInISOWeekYears/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/isLastDayOfMonth/index.js","node_modules/date-fns/esm/differenceInMonths/index.js","node_modules/date-fns/esm/differenceInQuarters/index.js","node_modules/date-fns/esm/differenceInSeconds/index.js","node_modules/date-fns/esm/differenceInWeeks/index.js","node_modules/date-fns/esm/differenceInYears/index.js","node_modules/date-fns/esm/eachDayOfInterval/index.js","node_modules/date-fns/esm/eachHourOfInterval/index.js","node_modules/date-fns/esm/eachMonthOfInterval/index.js","node_modules/date-fns/esm/startOfQuarter/index.js","node_modules/date-fns/esm/eachQuarterOfInterval/index.js","node_modules/date-fns/esm/eachWeekOfInterval/index.js","node_modules/date-fns/esm/eachWeekendOfInterval/index.js","node_modules/date-fns/esm/startOfMonth/index.js","node_modules/date-fns/esm/eachWeekendOfMonth/index.js","node_modules/date-fns/esm/startOfYear/index.js","node_modules/date-fns/esm/endOfYear/index.js","node_modules/date-fns/esm/eachWeekendOfYear/index.js","node_modules/date-fns/esm/eachYearOfInterval/index.js","node_modules/date-fns/esm/endOfDecade/index.js","node_modules/date-fns/esm/endOfHour/index.js","node_modules/date-fns/esm/endOfWeek/index.js","node_modules/date-fns/esm/endOfISOWeek/index.js","node_modules/date-fns/esm/endOfISOWeekYear/index.js","node_modules/date-fns/esm/endOfMinute/index.js","node_modules/date-fns/esm/endOfQuarter/index.js","node_modules/date-fns/esm/endOfSecond/index.js","node_modules/date-fns/esm/endOfToday/index.js","node_modules/date-fns/esm/endOfTomorrow/index.js","node_modules/date-fns/esm/endOfYesterday/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/format/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/cloneObject/index.js","node_modules/date-fns/esm/formatDistance/index.js","node_modules/date-fns/esm/formatDistanceStrict/index.js","node_modules/date-fns/esm/formatDistanceToNow/index.js","node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","node_modules/date-fns/esm/formatDuration/index.js","node_modules/date-fns/esm/formatISO/index.js","node_modules/date-fns/esm/formatISO9075/index.js","node_modules/date-fns/esm/formatISODuration/index.js","node_modules/date-fns/esm/formatRFC3339/index.js","node_modules/date-fns/esm/formatRFC7231/index.js","node_modules/date-fns/esm/formatRelative/index.js","node_modules/date-fns/esm/fromUnixTime/index.js","node_modules/date-fns/esm/getDate/index.js","node_modules/date-fns/esm/getDay/index.js","node_modules/date-fns/esm/getDayOfYear/index.js","node_modules/date-fns/esm/getDaysInMonth/index.js","node_modules/date-fns/esm/isLeapYear/index.js","node_modules/date-fns/esm/getDaysInYear/index.js","node_modules/date-fns/esm/getDecade/index.js","node_modules/date-fns/esm/getHours/index.js","node_modules/date-fns/esm/getISODay/index.js","node_modules/date-fns/esm/getISOWeek/index.js","node_modules/date-fns/esm/getISOWeeksInYear/index.js","node_modules/date-fns/esm/getMilliseconds/index.js","node_modules/date-fns/esm/getMinutes/index.js","node_modules/date-fns/esm/getMonth/index.js","node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","node_modules/date-fns/esm/getSeconds/index.js","node_modules/date-fns/esm/getTime/index.js","node_modules/date-fns/esm/getUnixTime/index.js","node_modules/date-fns/esm/getWeekYear/index.js","node_modules/date-fns/esm/startOfWeekYear/index.js","node_modules/date-fns/esm/getWeek/index.js","node_modules/date-fns/esm/getWeekOfMonth/index.js","node_modules/date-fns/esm/lastDayOfMonth/index.js","node_modules/date-fns/esm/getWeeksInMonth/index.js","node_modules/date-fns/esm/getYear/index.js","node_modules/date-fns/esm/subDays/index.js","node_modules/date-fns/esm/subMonths/index.js","node_modules/date-fns/esm/sub/index.js","node_modules/date-fns/esm/intervalToDuration/index.js","node_modules/date-fns/esm/intlFormat/index.js","node_modules/date-fns/esm/isAfter/index.js","node_modules/date-fns/esm/isBefore/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/isEqual/index.js","node_modules/date-fns/esm/isExists/index.js","node_modules/date-fns/esm/isFirstDayOfMonth/index.js","node_modules/date-fns/esm/isFriday/index.js","node_modules/date-fns/esm/isFuture/index.js","node_modules/date-fns/esm/_lib/setUTCDay/index.js","node_modules/date-fns/esm/_lib/setUTCISODay/index.js","node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/setUTCWeek/index.js","node_modules/date-fns/esm/parse/_lib/parsers/index.js","node_modules/date-fns/esm/parse/index.js","node_modules/date-fns/esm/isMatch/index.js","node_modules/date-fns/esm/isMonday/index.js","node_modules/date-fns/esm/isPast/index.js","node_modules/date-fns/esm/startOfHour/index.js","node_modules/date-fns/esm/isSameHour/index.js","node_modules/date-fns/esm/isSameWeek/index.js","node_modules/date-fns/esm/isSameISOWeek/index.js","node_modules/date-fns/esm/isSameISOWeekYear/index.js","node_modules/date-fns/esm/startOfMinute/index.js","node_modules/date-fns/esm/isSameMinute/index.js","node_modules/date-fns/esm/isSameMonth/index.js","node_modules/date-fns/esm/isSameQuarter/index.js","node_modules/date-fns/esm/startOfSecond/index.js","node_modules/date-fns/esm/isSameSecond/index.js","node_modules/date-fns/esm/isSameYear/index.js","node_modules/date-fns/esm/isThisHour/index.js","node_modules/date-fns/esm/isThisISOWeek/index.js","node_modules/date-fns/esm/isThisMinute/index.js","node_modules/date-fns/esm/isThisMonth/index.js","node_modules/date-fns/esm/isThisQuarter/index.js","node_modules/date-fns/esm/isThisSecond/index.js","node_modules/date-fns/esm/isThisWeek/index.js","node_modules/date-fns/esm/isThisYear/index.js","node_modules/date-fns/esm/isThursday/index.js","node_modules/date-fns/esm/isToday/index.js","node_modules/date-fns/esm/isTomorrow/index.js","node_modules/date-fns/esm/isTuesday/index.js","node_modules/date-fns/esm/isWednesday/index.js","node_modules/date-fns/esm/isWithinInterval/index.js","node_modules/date-fns/esm/isYesterday/index.js","node_modules/date-fns/esm/lastDayOfDecade/index.js","node_modules/date-fns/esm/lastDayOfWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","node_modules/date-fns/esm/lastDayOfQuarter/index.js","node_modules/date-fns/esm/lastDayOfYear/index.js","node_modules/date-fns/esm/lightFormat/index.js","node_modules/date-fns/esm/max/index.js","node_modules/date-fns/esm/milliseconds/index.js","node_modules/date-fns/esm/min/index.js","node_modules/date-fns/esm/parseISO/index.js","node_modules/date-fns/esm/parseJSON/index.js","node_modules/date-fns/esm/roundToNearestMinutes/index.js","node_modules/date-fns/esm/setMonth/index.js","node_modules/date-fns/esm/set/index.js","node_modules/date-fns/esm/setDate/index.js","node_modules/date-fns/esm/setDay/index.js","node_modules/date-fns/esm/setDayOfYear/index.js","node_modules/date-fns/esm/setHours/index.js","node_modules/date-fns/esm/setISODay/index.js","node_modules/date-fns/esm/setISOWeek/index.js","node_modules/date-fns/esm/setMilliseconds/index.js","node_modules/date-fns/esm/setMinutes/index.js","node_modules/date-fns/esm/setQuarter/index.js","node_modules/date-fns/esm/setSeconds/index.js","node_modules/date-fns/esm/setWeek/index.js","node_modules/date-fns/esm/setWeekYear/index.js","node_modules/date-fns/esm/setYear/index.js","node_modules/date-fns/esm/startOfDecade/index.js","node_modules/date-fns/esm/startOfToday/index.js","node_modules/date-fns/esm/startOfTomorrow/index.js","node_modules/date-fns/esm/startOfYesterday/index.js","node_modules/date-fns/esm/subBusinessDays/index.js","node_modules/date-fns/esm/subHours/index.js","node_modules/date-fns/esm/subMinutes/index.js","node_modules/date-fns/esm/subQuarters/index.js","node_modules/date-fns/esm/subSeconds/index.js","node_modules/date-fns/esm/subWeeks/index.js","node_modules/date-fns/esm/subYears/index.js","node_modules/date-fns/esm/constants/index.js","node_modules/date-fns/esm/index.js","component/generate.js","component/birthday.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["data","listOfData","document","querySelector","addDataBtn","myInput","getMonth","inputSearch","resetBtn","wait","ms","Promise","resolve","setTimeout","destroyPopup","popup","classList","remove","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","addDays","dirtyDate","dirtyAmount","date","amount","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","daysInMonth","setFullYear","getFullYear","add","duration","years","months","weeks","days","hours","minutes","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","isWeekend","day","getDay","isSunday","isSaturday","addBusinessDays","startedOnWeekend","getHours","sign","fullWeeks","restDays","abs","setHours","addMilliseconds","timestamp","MILLISECONDS_IN_HOUR","addHours","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfISOWeekYear","fourthOfJanuary","getTimezoneOffsetInMilliseconds","utcDate","UTC","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","setISOWeekYear","dirtyISOWeekYear","isoWeekYear","addISOWeekYears","MILLISECONDS_IN_MINUTE","addMinutes","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","undefined","inclusive","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","closestIndexTo","dirtyDateToCompare","dirtyDatesArray","dateToCompare","timeToCompare","datesArray","forEach","Array","slice","result","minDistance","index","currentDate","distance","closestTo","compareAsc","dateLeft","dateRight","compareDesc","isValid","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","differenceInBusinessDays","calendarDifference","differenceInCalendarISOWeekYears","MILLISECONDS_IN_WEEK","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","getQuarter","quarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","compareLocalAsc","differenceInDays","difference","isLastDayNotFull","differenceInMilliseconds","differenceInHours","subISOWeekYears","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMinutes","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","dates","step","push","eachHourOfInterval","startTime","setMinutes","eachMonthOfInterval","startOfQuarter","currentMonth","eachQuarterOfInterval","startDateQuarter","endDateQuarter","quarters","currentQuarter","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","eachYearOfInterval","endOfDecade","decade","endOfHour","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","endOfMinute","setSeconds","endOfQuarter","endOfSecond","endOfToday","now","endOfTomorrow","endOfYesterday","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","replace","addSuffix","comparison","buildFormatLongFn","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","_dirtyOptions","rem100","localize","era","dayPeriod","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","value","valueCallback","rest","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","object","predicate","key","hasOwnProperty","array","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","code","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","output","formatters","y","signedYear","getUTCFullYear","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","startOfUTCISOWeek","getUTCDay","setUTCDate","getUTCISOWeekYear","startOfUTCISOWeekYear","getUTCISOWeek","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","assign","target","dirtyObject","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethod","roundingMethodFn","formatDistanceToNow","formatDistanceToNowStrict","defaultFormat","formatDuration","zero","reduce","acc","addChunk","formatISO","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","hour","minute","second","separator","formatISO9075","formatISODuration","_duration$years","_duration$months","_duration$days","_duration$hours","_duration$minutes","_duration$seconds","formatRFC3339","fractionDigits","fractionalSecond","formatRFC7231","dayName","monthName","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","getDaysInMonth","monthIndex","lastDayOfMonth","isLeapYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","valueOf","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getUnixTime","getWeekYear","startOfWeekYear","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","subDays","subMonths","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","intervalToDuration","_ref","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds","intlFormat","formatOrLocale","localeOptions","_localeOptions","formatOptions","isFormatOptions","Intl","DateTimeFormat","opts","isAfter","isBefore","isDate","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isFuture","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","subPriority","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","isArray","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","setterArray","convertedDate","isMatch","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","startOfMinute","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","max","yearInDays","totalDays","totalSeconds","min","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","split","timeString","substr","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyMonth","dateWithDesiredMonth","dirtyDayOfMonth","setDay","delta","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subBusinessDays","subHours","subMinutes","subQuarters","subSeconds","subWeeks","subYears","maxTime","minTime","generateLists","people","peopleBirthday","next","birthdayA","birthday","birthdayB","personBirthday","birthdayDate","toISOString","momentYear","log","peopleAge","futureAge","oneDay","dayLeft","birthdayInDays","monthNname","formatedDate","id","picture","firstName","lastName","fetchData","response","fetch","dataList","json","displayList","myHtml","innerHTML","handleEditPerson","editBtn","closest","editedId","dataset","editPerson","dataId","findPerson","find","person","maxDate","createElement","insertAdjacentHTML","body","appendChild","style","overflow","window","onclick","event","display","addEventListener","preventDefault","toTimestamp","strDate","datum","dispatchEvent","CustomEvent","once","handleDeletePerson","deleteBtn","deleteId","deleteDataForm","idToDelete","dataToDelete","removeData","el","deleteFindData","addNewPerson","addData","newData","form","currentTarget","newPerson","avatar","firstname","lastname","initLocalStorage","lsData","JSON","localStorage","getItem","updateLocalStorage","setItem","stringify","filteredName","listOfInput","filteredList","item","includes","filteredMonth","selectedMonth","mth","fullMonth","toLocaleString","filteredMonthAndName","nameFiltered","monthFiltered","HTML","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","getElementById","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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AAUH,SAAV,EAAqBgB,MAArB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuE,UAAT,CAAoBvF,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAgBD,SAAhB,EAA2BG,MAAM,GAAG,IAApC,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqF,QAAT,CAAkBxF,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,MAAIiB,IAAI,GAAGf,MAAM,GAAG,CAApB;AACA,SAAO,qBAAQH,SAAR,EAAmBkB,IAAnB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuE,QAAT,CAAkBzF,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAUD,SAAV,EAAqBG,MAAM,GAAG,EAA9B,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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pDD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqE,OAAT,CAAiB1H,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,SAAO,CAACxB,KAAK,CAAC0B,IAAD,CAAb;AACD;;;;;;;;;AChED;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASyH,SAAT,CAAmBlD,aAAnB,EAAkCC,cAAlC,EAAkD;AAC/D,uBAAa,CAAb,EAAgBvF,SAAhB;AACA,MAAIyI,kBAAkB,GAAG,oBAAWnD,aAAX,CAAzB;AACA,MAAIoD,mBAAmB,GAAG,oBAAWnD,cAAX,CAA1B;AACA,SAAOkD,kBAAkB,CAAClI,OAAnB,OAAiCmI,mBAAmB,CAACnI,OAApB,EAAxC;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASoI,wBAAT,CAAkCrD,aAAlC,EAAiDC,cAAjD,EAAiE;AAC9E,uBAAa,CAAb,EAAgBvF,SAAhB;AACA,MAAIoI,QAAQ,GAAG,qBAAO9C,aAAP,CAAf;AACA,MAAI+C,SAAS,GAAG,qBAAO9C,cAAP,CAAhB;AACA,MAAI,CAAC,oBAAQ6C,QAAR,CAAD,IA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;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8M,YAAT,CAAsBhN,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAImL,YAAY,GAAGjL,IAAI,CAAC3C,QAAL,EAAnB;AACA,MAAIqM,KAAK,GAAGuB,YAAY,GAAGA,YAAY,GAAG,CAA9B,GAAkC,CAA9C;AACAjL,EAAAA,IAAI,CAACO,QAAL,CAAcmJ,KAAd,EAAqB,CAArB;AACA1J,EAAAA,IAAI,CAACsC,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,SAAOtC,IAAP;AACD;;;;;;;;;ACjCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+M,WAAT,CAAqBjN,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACAE,EAAAA,IAAI,CAAC2M,eAAL,CAAqB,GAArB;AACA,SAAO3M,IAAP;AACD;;;;;;;;;AC9BD;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgN,UAAT,GAAsB;AACnC,SAAO,oBAASzN,IAAI,CAAC0N,GAAL,EAAT,CAAP;AACD;;;;;;;;;AC3BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,aAAT,GAAyB;AACtC,MAAID,GAAG,GAAG,IAAI1N,IAAJ,EAAV;AACA,MAAI+D,I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,gBAAgB,CAACtd,OAAO,GAAGmd,eAAX,CAA5B;AACA,WAAOvb,MAAM,CAACyL,cAAP,CAAsB,QAAtB,EAAgC1N,KAAhC,EAAuCkd,eAAvC,CAAP;AACD;;AAED,QAAM,IAAI7a,UAAJ,CAAe,mEAAf,CAAN;AACD;;;;;;;;;ACte,SAASub,mBAAT,CAA6B3e,SAA7B,EAAwC8C,YAAxC,EAAsD;AACnE,uBAAa,CAAb,EAAgB3D,SAAhB;AACA,SAAO,oBAAgBa,SAAhB,EAA2BP,IAAI,CAAC0N,GAAL,EAA3B,EAAuCrK,YAAvC,CAAP;AACD;;;;;;;;;AC/GD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8b,yBAAT,CAAmC5e,SAAnC,EAA8C8C,YAA9C,EAA4D;AACzE,uBAAa,CAAb,EAAgB3D,SAAhB;AACA,SAAO,oBAAsBa,SAAtB,EAAiCP,IAAI,CAAC0N,GAAL,EAAjC,EAA6CrK,YAA7C,CAAP;AACD;;;;;;;;;AChFD;;;;AACA,IAAI+b,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,SAAzD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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GAAG,IAAlB,CAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS5gB,OAAT,CAAiBL,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIO,UAAU,GAAGL,IAAI,CAACG,OAAL,EAAjB;AACA,SAAOE,UAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASuB,MAAT,CAAgB9B,SAAhB,EAA2B;AACxC,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI6B,GAAG,GAAG3B,IAAI,CAAC4B,MAAL,EAAV;AACA,SAAOD,GAAP;AACD;;;;;;;;;AC7BD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqf,YAAT,CAAsBlhB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIqD,IAAI,GAAG,qBAAyBnD,IAAzB,EAA+B,qBAAYA,IAAZ,CAA/B,CAAX;AACA,MAAImZ,SAAS,GAAGhW,IAAI,GAAG,CAAvB;AACA,SAAOgW,SAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8H,cAAT,CAAwBnhB,SAAxB,EAAmC;AAChD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIwD,IAAI,GAAGtD,IAAI,CAACU,WAAL,EAAX;AACA,MAAIwgB,UAAU,GAAGlhB,IAAI,CAAC3C,QAAL,EAAjB;AACA,MAAI8jB,cAAc,GAAG,IAAI5hB,IAAJ,CAAS,CAAT,CAArB;AACA4hB,EAAAA,cAAc,CAAC1gB,WAAf,CAA2B6C,IAA3B,EAAiC4d,UAAU,GAAG,CAA9C,EAAiD,CAAjD;AACAC,EAAAA,cAAc,CAAC7e,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC;AACA,SAAO6e,cAAc,CAAChhB,OAAf,EAAP;AACD;;;;;;;;;ACjCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASihB,UAAT,CAAoBthB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIwD,IAAI,GAAGtD,IAAI,CAACU,WAAL,EAAX;AACA,SAAO4C,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAA5D;AACD;;;;;;;;;AC7BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+d,aAAT,CAAuBvhB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;;AAEA,MAAIiP,MAAM,CAAC,IAAIxP,IAAJ,CAASS,IAAT,CAAD,CAAN,KAA2B,cAA/B,EAA+C;AAC7C,WAAO7B,GAAP;AACD;;AAED,SAAO,qBAAW6B,IAAX,IAAmB,GAAnB,GAAyB,GAAhC;AACD;;;;;;;;;AClCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASshB,SAAT,CAAmBxhB,SAAnB,EAA8B;AAC3C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIwD,IAAI,GAAGtD,IAAI,CAACU,WAAL,EAAX;AACA,MAAI4L,MAAM,GAAG/N,IAAI,CAACE,KAAL,CAAW6E,IAAI,GAAG,EAAlB,IAAwB,EAArC;AACA,SAAOgJ,MAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASrK,QAAT,CAAkBnC,SAAlB,EAA6B;AAC1C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAImB,KAAK,GAAGjB,IAAI,CAACiC,QAAL,EAAZ;AACA,SAAOhB,KAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsgB,SAAT,CAAmBzhB,SAAnB,EAA8B;AAC3C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI6B,GAAG,GAAG3B,IAAI,CAAC4B,MAAL,EAAV;;AAEA,MAAID,GAAG,KAAK,CAAZ,EAAe;AACbA,IAAAA,GAAG,GAAG,CAAN;AACD;;AAED,SAAOA,GAAP;AACD;;;;;;;;;ACrCD;;AACA;;AACA;;AACA;;;;AACA,IAAIoG,oBAAoB,GAAG,SAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASyZ,UAAT,CAAoB1hB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIqD,IAAI,GAAG,qBAAenD,IAAf,EAAqBR,OAArB,KAAiC,qBAAmBQ,IAAnB,EAAyBR,OAAzB,EAA5C,CAH4C,CAGoC;AAChF;AACA;;AAEA,SAAOjB,IAAI,CAACsG,KAAL,CAAW1B,IAAI,GAAG4E,oBAAlB,IAA0C,CAAjD;AACD;;;;;;;;;ACrCD;;AACA;;AACA;;;;AACA,IAAIA,oBAAoB,GAAG,SAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAAS0Z,iBAAT,CAA2B3hB,SAA3B,EAAsC;AACnD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIyiB,QAAQ,GAAG,oBAAmB5hB,SAAnB,CAAf;AACA,MAAI6hB,QAAQ,GAAG,oBAAmB,qBAASD,QAAT,EAAmB,EAAnB,CAAnB,CAAf;AACA,MAAIve,IAAI,GAAGwe,QAAQ,CAACC,OAAT,KAAqBF,QAAQ,CAACE,OAAT,EAAhC,CAJmD,CAIC;AACpD;AACA;;AAEA,SAAOrjB,IAAI,CAACsG,KAAL,CAAW1B,IAAI,GAAG4E,oBAAlB,CAAP;AACD;;;;;;;;;ACrCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS7D,eAAT,CAAyBpE,SAAzB,EAAoC;AACjD,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI4W,YAAY,GAAG1W,IAAI,CAACkE,eAAL,EAAnB;AACA,SAAOwS,YAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS1S,UAAT,CAAoBlE,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIoB,OAAO,GAAGlB,IAAI,CAACgE,UAAL,EAAd;AACA,SAAO9C,OAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS7D,QAAT,CAAkByC,SAAlB,EAA6B;AAC1C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAI4J,KAAK,GAAG1J,IAAI,CAAC3C,QAAL,EAAZ;AACA,SAAOqM,KAAP;AACD;;;;;;;;;AC7BD;;AACA;;;;AACA,IAAIrF,mBAAmB,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAAzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASwd,6BAAT,CAAuCpc,iBAAvC,EAA0DC,kBAA1D,EAA8E;AAC3F,uBAAa,CAAb,EAAgBzG,SAAhB;AACA,MAAI4G,YAAY,GAAGJ,iBAAiB,IAAI,EAAxC;AACA,MAAIK,aAAa,GAAGJ,kBAAkB,IAAI,EAA1C;AACA,MAAIK,aAAa,GAAG,oBAAOF,YAAY,CAACG,KAApB,EAA2BxG,OAA3B,EAApB;AACA,MAAIyG,WAAW,GAAG,oBAAOJ,YAAY,CAACK,GAApB,EAAyB1G,OAAzB,EAAlB;AACA,MA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IAAAA,YAAY,EAAE;AADiC,GAA1C,CAAP;AAGD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASyoB,iBAAT,CAA2BlnB,aAA3B,EAA0CC,cAA1C,EAA0D;AACvE,uBAAa,CAAb,EAAgBvF,SAAhB;AACA,MAAIysB,mBAAmB,GAAG,oBAAmBnnB,aAAnB,CAA1B;AACA,MAAIonB,oBAAoB,GAAG,oBAAmBnnB,cAAnB,CAA3B;AACA,SAAOknB,mBAAmB,CAAClsB,OAApB,OAAkCmsB,oBAAoB,CAACnsB,OAArB,EAAzC;AACD;;;;;;;;;ACrCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASosB,aAAT,CAAuB9rB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACAE,EAAAA,IAAI,CAAC6M,UAAL,CAAgB,CAAhB,EAAmB,CAAnB;AACA,SAAO7M,IAAP;AACD;;;;;;;;;AC9BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6rB,YAAT,CAAsBtnB,aAAtB,EAAqCC,cAArC,EAAqD;AAClE,uBAAa,CAAb,EAAgBvF,SAAhB;AACA,MAAI6sB,qBAAqB,GAAG,oBAAcvnB,aAAd,CAA5B;AACA,MAAIwnB,sBAAsB,GAAG,oBAAcvnB,cAAd,CAA7B;AACA,SAAOsnB,qBAAqB,CAACtsB,OAAtB,OAAoCusB,sBAAsB,CAACvsB,OAAvB,EAA3C;AACD;;;;;;;;;AClCD;;AACA;;;;AA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AzB,CAAP;AACD;;;;;;;;;ACjCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS0f,YAAT,CAAsB7sB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAaM,IAAI,CAAC0N,GAAL,EAAb,EAAyBnN,SAAzB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8sB,WAAT,CAAqB9sB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAYM,IAAI,CAAC0N,GAAL,EAAZ,EAAwBnN,SAAxB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+sB,aAAT,CAAuB/sB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAcM,IAAI,CAAC0N,GAAL,EAAd,EAA0BnN,SAA1B,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgtB,YAAT,CAAsBhtB,SAAtB,EAAiC;AAC9C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAaM,IAAI,CAAC0N,GAAL,EAAb,EAAyBnN,SAAzB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASitB,UAAT,CAAoBjtB,SAApB,EAA+B+C,OAA/B,EAAwC;AACrD,uBAAa,CAAb,EAAgB5D,SAAhB;AACA,SAAO,oBAAWa,SAAX,EAAsBP,IAAI,CAAC0N,GAAL,EAAtB,EAAkCpK,OAAlC,CAAP;AACD;;;;;;;;;ACzCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmqB,UAAT,CAAoBltB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAWa,SAAX,EAAsBP,IAAI,CAAC0N,GAAL,EAAtB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASggB,UAAT,CAAoBntB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAOa,SAAP,EAAkB8B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASsrB,OAAT,CAAiBptB,SAAjB,EAA4B;AACzC,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAUa,SAAV,EAAqBP,IAAI,CAAC0N,GAAL,EAArB,CAAP;AACD;;;;;;;;;AC/BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkgB,UAAT,CAAoBrtB,SAApB,EAA+B;AAC5C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,qBAAUa,SAAV,EAAqB,oBAAQP,IAAI,CAAC0N,GAAL,EAAR,EAAoB,CAApB,CAArB,CAAP;AACD;;;;;;;;;AChCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmgB,SAAT,CAAmBttB,SAAnB,EAA8B;AAC3C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAOa,SAAP,EAAkB8B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASyrB,WAAT,CAAqBvtB,SAArB,EAAgC;AAC7C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,SAAO,oBAAOa,SAAP,EAAkB8B,MAAlB,OAA+B,CAAtC;AACD;;;;;;;;;AC3BD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS0rB,gBAAT,CAA0BxtB,SAA1B,EAAqCsK,aAArC,EAAoD;AACjE,uBAAa,CAAb,EAAgBnL,SAAhB;AACA,MAAIo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jL,EAAAA,IAAI,CAACO,QAAL,CAAcmJ,KAAd,EAAqB,CAArB;AACA1J,EAAAA,IAAI,CAACsC,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAOtC,IAAP;AACD;;;;;;;;;ACpCD;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6tB,aAAT,CAAuB/tB,SAAvB,EAAkC;AAC/C,uBAAa,CAAb,EAAgBb,SAAhB;AACA,MAAIe,IAAI,GAAG,oBAAOF,SAAP,CAAX;AACA,MAAIwD,IAAI,GAAGtD,IAAI,CAACU,WAAL,EAAX;AACAV,EAAAA,IAAI,CAACS,WAAL,CAAiB6C,IAAI,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACAtD,EAAAA,IAAI,CAACsC,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAOtC,IAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAImc,sBAAsB,GAAG,gCAA7B;AACA,IAAIE,mBAAmB,GAAG,cAA1B;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AACA,IAAIC,6BAA6B,GAAG,UAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASuR,WAAT,CAAqBhuB,SAArB,EAAgC0c,cAAhC,EAAgD;AAC7D,uBAAa,CAAb,EAAgBvd,SAAhB;AACA,MAAIwd,SAAS,GAAG1N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A,SAAO,qBAASjyB,IAAT,EAAeA,IAAI,CAAC3C,QAAL,KAAkB8F,IAAI,GAAG,CAAxC,CAAP;AACD;;;;;;;;;AClCD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS0J,UAAT,CAAoB/M,SAApB,EAA+BoyB,YAA/B,EAA6C;AAC1D,uBAAa,CAAb,EAAgBjzB,SAAhB;AACA,MAAIe,IAAI,GAAG,qBAAOF,SAAP,CAAX;AACA,MAAIqB,OAAO,GAAG,oBAAU+wB,YAAV,CAAd;AACAlyB,EAAAA,IAAI,CAAC6M,UAAL,CAAgB1L,OAAhB;AACA,SAAOnB,IAAP;AACD;;;;;;;;;AChCD;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASmyB,OAAT,CAAiBryB,SAAjB,EAA4B2lB,SAA5B,EAAuC7iB,YAAvC,EAAqD;AAClE,uBAAa,CAAb,EAAgB3D,SAAhB;AACA,MAAIe,IAAI,GAAG,qBAAOF,SAAP,CAAX;AACA,MAAIiZ,IAAI,GAAG,qBAAU0M,SAAV,CAAX;AACA,MAAItiB,IAAI,GAAG,oBAAQnD,IAAR,EAAc4C,YAAd,IAA8BmW,IAAzC;AACA/Y,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBgD,IAAI,GAAG,CAArC;AACA,SAAOnD,IAAP;AACD;;;;;;;;;ACxDD;;AACA;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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WAAV,CAAb;AACA,SAAO,qBAAgBD,SAAhB,EAA2B,CAACG,MAA5B,CAAP;AACD;;;;;;;;;AC1BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS4yB,QAAT,CAAkB/yB,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACG,MAArB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS6yB,UAAT,CAAoBhzB,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAWD,SAAX,EAAsB,CAACG,MAAvB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS8yB,WAAT,CAAqBjzB,SAArB,EAAgCC,WAAhC,EAA6C;AAC1D,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAYD,SAAZ,EAAuB,CAACG,MAAxB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAS+yB,UAAT,CAAoBlzB,SAApB,EAA+BC,WAA/B,EAA4C;AACzD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAAWD,SAAX,EAAsB,CAACG,MAAvB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASgzB,QAAT,CAAkBnzB,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACG,MAArB,CAAP;AACD;;;;;;;;;AC9BD;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASizB,QAAT,CAAkBpzB,SAAlB,EAA6BC,WAA7B,EAA0C;AACvD,uBAAa,CAAb,EAAgBd,SAAhB;AACA,MAAIgB,MAAM,GAAG,oBAAUF,WAAV,CAAb;AACA,SAAO,qBAASD,SAAT,EAAoB,CAACG,MAArB,CAAP;AACD;;;;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACO,IAAIkzB,OAAO,GAAG50B,IAAI,CAACsY,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkB,EAAlB,GAAuB,EAAvB,GAA4B,EAA5B,GAAiC,IAA/C;AACP;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAIuc,OAAO,GAAG,CAACD,OAAfbvMA;;AAEO,SAASE,aAAT,CAAuBC,MAAvB,EAA+B;AAClC,SAAOA,MAAM,CACR5I,IADE,CACG,UAAU5U,CAAV,EAAa8D,CAAb,EAAgB;AAClB,aAAS2Z,cAAT,CAAwB7pB,KAAxB,EAA+B/H,GAA/B,EAAoC;AAChC,UAAIqO,KAAK,GAAG,IAAIzQ,IAAJ,EAAZ;AAAA,UACAkoB,WAAW,GAAGzX,KAAK,CAACtP,WAAN,EADd;AAAA,UAEA8yB,IAAI,GAAG,IAAIj0B,IAAJ,CAASkoB,WAAT,EAAsB/d,KAAK,GAAG,CAA9B,EAAiC/H,GAAjC,CAFP;AAGAqO,MAAAA,KAAK,CAAC1N,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACA,UAAI0N,KAAK,GAAGwjB,IAAZ,EAAkBA,IAAI,CAAC/yB,WAAL,CAAiBgnB,WAAW,GAAG,CAA/B;AAClB,aAAOlpB,IAAI,CAACsG,KAAL,CAAW,CAAC2uB,IAAI,GAAGxjB,KAAR,IAAiB,MAA5B,CAAP;AACH;;AACD,QAAIyjB,SAAS,GAAGF,cAAc,CAAC,IAAIh0B,IAAJ,CAASuW,CAAC,CAAC4d,QAAX,EAAqBr2B,QAArB,KAAgC,CAAjC,EAAmC,IAAIkC,IAAJ,CAASuW,CAAC,CAAC4d,QAAX,EAAqBvzB,OAArB,EAAnC,CAA9B;AACA,QAAIwzB,SAAS,GAAGJ,cAAc,CAAC,IAAIh0B,IAAJ,CAASqa,CAAC,CAAC8Z,QAAX,EAAqBr2B,QAArB,KAAgC,CAAjC,EAAmC,IAAIkC,IAAJ,CAASqa,CAAC,CAAC8Z,QAAX,EAAqBvzB,OAArB,EAAnC,CAA9B;AACA,WAAOszB,SAAS,GAAGE,SAAnB;AACH,GAbE,EAcF/W,GAdE,CAcE7f,IAAI,IAAI;AACT,UAAMiT,KAAK,GAAG,IAAIzQ,IAAJ,EAAd;AACA,UAAMq0B,cAAc,GAAG,IAAIr0B,IAAJ,CAASxC,IAAI,CAAC22B,QAAd,CAAvB;AACA,QAAIG,YAAY,GAAGD,cAAc,CAACE,WAAf,GAA6BjtB,KAA7B,CAAmC,CAAnC,CAAnB;AACA,UAAMktB,UAAU,GAAG/jB,KAAK,CAACtP,WAAN,EAAnB;AACAmzB,IAAAA,YAAY,GAAGE,UAAU,GAAGF,YAA5B;AACAp0B,IAAAA,OAAO,CAACu0B,GAAR,CAAYH,YAAZ;AACA,UAAMlyB,GAAG,GAAGiyB,cAAc,CAAChyB,MAAf,EAAZ;AACA,UAAM8H,KAAK,GAAGkqB,cAAc,CAACv2B,QAAf,EAAd;AACA,UAAMiG,IAAI,GAAGswB,cAAc,CAAClzB,WAAf,EAAb;AACA,UAAMuzB,SAAS,GAAGjkB,KAAK,CAACtP,WAAN,KAAsB4C,IAAxC;AACA,UAAM4wB,SAAS,GAAGD,SAAlB;AACA,QAAIE,MAAM,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA9B;AAGA,UAAMC,OAAO,GAAG71B,IAAI,CAACsG,KAAL,CAAW,CAAC,IAAItF,IAAJ,CAASs0B,YAAT,EAAuBr0B,OAAvB,KAAmCwQ,KAAK,CAACxQ,OAAN,EAApC,IAAwD20B,MAAnE,CAAhB;AACA,UAAME,cAAc,GAAGD,OAAO,GAAG,CAAV,GAAc,MAAMA,OAApB,GAA8BA,OAArD;AAEA,QAAIE,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACb,MADa,EACL,QADK,EACK,WADL,EACkB,SADlB,EAC6B,UAD7B,EACyC,UADzC,EAEf5qB,KAFe,CAAjB;AAGA,UAAM6qB,YAAY,GAAG,qBAAO,IAAIh1B,IAAJ,CAASq0B,cAAT,CAAP,EAAiC,IAAjC,CAArB;AAEA,WAAQ;AACpB,gDAAgD72B,IAAI,CAACy3B,EAAG;AACxD,kEAAkEz3B,IAAI,CAAC03B,OAAQ,UAAS13B,IAAI,CAAC23B,SAAL,GAAiB,GAAjB,GAAuB33B,IAAI,CAAC43B,QAAS;AAC7H;AACA;AACA,2EAA2E53B,IAAI,CAAC23B,SAAU;AAC1F,gEAAgE33B,IAAI,CAAC43B,QAAS;AAC9E;AACA,qEAAqET,SAAU,cAAaI,UAAW,UAASC,YAAa;AAC7H;AACA;AACA;AACA;AACA,0DAA0DF,cAAgB;AAC1E;AACA,mGAAmGt3B,IAAI,CAACy3B,EAAG;AAC3G;AACA;AACA;AACA;AACA;AACA,2CAA2Cz3B,IAAI,CAACy3B,EAAG;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA7BY;AA8BH,GAnEE,EAmEAxX,IAnEA,CAmEK,EAnEL,CAAP,CADkC,CAqElC;AACH;;AAAA;;;;ACxED;;AACA;;AACA;;AAGA;AACA,eAAe4X,SAAf,GAA2B;AACvB,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC/3B,aAAD,CAA5B;AACA,QAAMg4B,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,MAAI1B,MAAM,GAAGyB,QAAb;;AAEA,WAASE,WAAT,GAAuB;AACnB,UAAMC,MAAM,GAAG,6BAAc5B,MAAd,CAAf;AAEAt2B,wBAAWm4B,SAAX,GAAuBD,MAAvB;AAEH;;AAAA;AACDD,EAAAA,WAAW,GAXY,CAcvB;;AACA,WAASG,gBAAT,CAA0B9b,CAA1B,EAA6B;AACzB,UAAM+b,OAAO,GAAG/b,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,aAAjB,CAAhB;;AACA,QAAID,OAAJ,EAAa;AACT,YAAME,QAAQ,GAAGF,OAAO,CAACG,OAAR,CAAgBhB,EAAjC;AACAiB,MAAAA,UAAU,CAACF,QAAD,CAAV;AACH;AACJ,GArBsB,CAsBvB;;;AACA,QAAME,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACjC,UAAMC,UAAU,GAAGrC,MAAM,CAACsC,IAAP,CAAYC,MAAM,IAAIA,MAAM,CAACrB,EAAP,KAAckB,MAApC,CAAnB;AACAj2B,IAAAA,OAAO,CAACu0B,GAAR,CAAY2B,UAAZ;AACA,WAAO,IAAIj4B,OAAJ,CAAY,gBAAgBC,OAAhB,EAAyB;AACxC,YAAMk2B,YAAY,GAAG,IAAIt0B,IAAJ,CAASo2B,UAAU,CAACjC,QAApB,EAA8BI,WAA9B,GAA4CjtB,KAA5C,CAAkD,CAAlD,EAAqD,EAArD,CAArB;AACA,YAAMivB,OAAO,GAAG,IAAIv2B,IAAJ,GAAWu0B,WAAX,GAAyBjtB,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAhB;AACA,YAAM/I,KAAK,GAAGb,QAAQ,CAAC84B,aAAT,CAAuB,MAAvB,CAAd;AACAj4B,MAAAA,KAAK,CAACC,SAAN,CAAgB4C,GAAhB,CAAoB,SAApB;AACA7C,MAAAA,KAAK,CAACk4B,kBAAN,CAAyB,YAAzB,EACK;AACjB;AACA;AACA,mDAAmDL,UAAU,CAACjB,SAAU,UAASiB,UAAU,CAAChB,QAAS;AACrG;AACA,iFAAiFgB,UAAU,CAAClB,OAAQ;AACpG;AACA,mFAAmFkB,UAAU,CAAChB,QAAS;AACvG;AACA,oFAAoFgB,UAAU,CAACjB,SAAU;AACzG;AACA,mFAAmFb,YAAa,UAASiC,OAAQ;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAzBY;AA2BA74B,MAAAA,QAAQ,CAACg5B,IAAT,CAAcC,WAAd,CAA0Bp4B,KAA1B;AACA,YAAM,wBAAK,EAAL,CAAN;AACAA,MAAAA,KAAK,CAACC,SAAN,CAAgB4C,GAAhB,CAAoB,MAApB;AACA1D,MAAAA,QAAQ,CAACg5B,IAAT,CAAcE,KAAd,CAAoBC,QAApB,GAA+B,QAA/B,CAnCwC,CAqCxC;;AACAC,MAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC7B,YAAIA,KAAK,CAACjZ,MAAN,IAAgBxf,KAApB,EAA2B;AAC3BA,UAAAA,KAAK,CAACq4B,KAAN,CAAYK,OAAZ,GAAsB,MAAtB;AACC;AACA,OAJL,CAtCwC,CA2CxC;;;AACAH,MAAAA,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAiCnd,CAAC,IAAI;AAClC,YAAIA,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,eAAjB,CAAJ,EAAuC;AACnC,0CAAax3B,KAAb;AACAb,UAAAA,QAAQ,CAACg5B,IAAT,CAAcE,KAAd,CAAoBC,QAApB,GAA+B,SAA/B;AACH,SAHD,MAGO,IAAI9c,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,yBAAjB,CAAJ,EAAiD;AACpD,0CAAax3B,KAAb;AACAb,UAAAA,QAAQ,CAACg5B,IAAT,CAAcE,KAAd,CAAoBC,QAApB,GAA+B,SAA/B;AACA32B,UAAAA,OAAO,CAACu0B,GAAR,CAAY,kBAAZ;AACH;AACJ,OATD;AAWAl2B,MAAAA,KAAK,CAAC24B,gBAAN,CAAuB,QAAvB,EAAiCnd,CAAC,IAAI;AAClCA,QAAAA,CAAC,CAACod,cAAF;AACAf,QAAAA,UAAU,CAAClB,OAAX,GAAqB32B,KAAK,CAAC22B,OAAN,CAAcxhB,KAAnC;AACA0iB,QAAAA,UAAU,CAAChB,QAAX,GAAsB72B,KAAK,CAAC62B,QAAN,CAAe1hB,KAArC;AACA0iB,QAAAA,UAAU,CAACjB,SAAX,GAAuB52B,KAAK,CAAC42B,SAAN,CAAgBzhB,KAAvC;;AACA,cAAM0jB,WAAW,GAAEC,OAAD,IAAW;AACzB,cAAIC,KAAK,GAAGt3B,IAAI,CAAC6oB,KAAL,CAAWwO,OAAX,CAAZ;AACA,iBAAOC,KAAP;AACF,SAHF;;AAIAlB,QAAAA,UAAU,CAACjC,QAAX,GAAsBiD,WAAW,CAAC74B,KAAK,CAAC41B,QAAN,CAAezgB,KAAhB,CAAjC;AACAqgB,QAAAA,MAAM,CAAC3sB,OAAP,CAAekvB,MAAM,IAAI;AACrB,cAAIA,MAAM,CAACrB,EAAP,KAAcmB,UAAU,CAACnB,EAA7B,EAAkC;AAC9BqB,YAAAA,MAAM,GAAGF,UAAT;AACH;AACJ,SAJD;AAKIV,QAAAA,WAAW,CAACU,UAAD,CAAX;AAEJh4B,QAAAA,OAAO,CAACG,KAAK,CAACE,MAAN,EAAD,CAAP;AACA,wCAAaF,KAAb;;AACAd,4BAAW85B,aAAX,CAAyB,IAAIC,WAAJ,CAAgB,qBAAhB,CAAzB;AACH,OApBD,EAoBG;AAAEC,QAAAA,IAAI,EAAE;AAAR,OApBH;AAqBH,KA5EM,CAAP;AA6EH,GAhFD,CAvBuB,CAyGvB;;;AACA,WAASC,kBAAT,CAA4B3d,CAA5B,EAA+B;AAC3B,UAAM4d,SAAS,GAAG5d,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,eAAjB,CAAlB;;AACA,QAAI4B,SAAJ,EAAe;AACX,YAAMC,QAAQ,GAAGD,SAAS,CAAC1B,OAAV,CAAkBhB,EAAnC;AACA4C,MAAAA,cAAc,CAACD,QAAD,CAAd;AACH;AACJ;;AAAA;;AAED,QAAMC,cAAc,GAAIC,UAAD,IAAgB;AACnC;AACA53B,IAAAA,OAAO,CAACu0B,GAAR,CAAYqD,UAAZ;AACA,WAAO,IAAI35B,OAAJ,CAAY,gBAAgBC,OAAhB,EAAyB;AACxC,YAAM25B,YAAY,GAAGr6B,QAAQ,CAAC84B,aAAT,CAAuB,KAAvB,CAArB;AACAuB,MAAAA,YAAY,CAACv5B,SAAb,CAAuB4C,GAAvB,CAA2B,WAA3B;AACA22B,MAAAA,YAAY,CAACtB,kBAAb,CAAgC,YAAhC,EACK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAdY;AAgBAK,MAAAA,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAiCnd,CAAC,IAAI;AAClC,YAAIA,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,eAAjB,CAAJ,EAAuC;AACnC,0CAAagC,YAAb;AACH,SAFD,MAEO,IAAIhe,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,yBAAjB,CAAJ,EAAiD;AACpD,0CAAagC,YAAb;AACH;AACJ,OAND;AAQAjB,MAAAA,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAiCnd,CAAC,IAAI;AAClCA,QAAAA,CAAC,CAACod,cAAF;;AACA,YAAIpd,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,eAAjB,CAAJ,EAAuC;AACnC,gBAAMiC,UAAU,GAAGjE,MAAM,CAAC3I,MAAP,CAAc6M,EAAE,IAAIA,EAAE,CAAChD,EAAH,IAAS6C,UAA7B,CAAnB;AACA,gBAAMI,cAAc,GAAGF,UAAvB;AACAjE,UAAAA,MAAM,GAAGmE,cAAT;AACAxC,UAAAA,WAAW,CAACwC,cAAD,CAAX;AACA,0CAAaH,YAAb;AACH;AACJ,OATD;AAUAr6B,MAAAA,QAAQ,CAACg5B,IAAT,CAAcC,WAAd,CAA0BoB,YAA1B;AACAA,MAAAA,YAAY,CAACv5B,SAAb,CAAuB4C,GAAvB,CAA2B,MAA3B;AACA1D,MAAAA,QAAQ,CAACg5B,IAAT,CAAcE,KAAd,CAAoBC,QAApB,GAA6B,QAA7B,CAvCwC,CAwCxC;;AACAC,MAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC7B,YAAIA,KAAK,CAACjZ,MAAN,IAAgBga,YAApB,EAAkC;AAClCA,UAAAA,YAAY,CAACnB,KAAb,CAAmBK,OAAnB,GAA6B,MAA7B;AACC;AACJ,OAJD;;AAKAv5B,MAAAA,QAAQ,CAACg5B,IAAT,CAAcE,KAAd,CAAoBC,QAApB,GAA6B,SAA7B;;AACAp5B,0BAAW85B,aAAX,CAAyB,IAAIC,WAAJ,CAAgB,qBAAhB,CAAzB;AACH,KAhDM,CAAP;AAiDH,GApDD;;AAsDA,QAAMW,YAAY,GAAIpe,CAAD,IAAO;AACxB,QAAIA,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,YAAjB,CAAJ,EAAoC;AAChCqC,MAAAA,OAAO;AACV;AACJ,GAJD;;AAOA,QAAMA,OAAO,GAAGnD,EAAE,IAAI;AAClB,WAAO,IAAI92B,OAAJ,CAAY,gBAAgBC,OAAhB,EAAyB;AACxC,YAAMi6B,OAAO,GAAG36B,QAAQ,CAAC84B,aAAT,CAAuB,MAAvB,CAAhB;AACA6B,MAAAA,OAAO,CAAC75B,SAAR,CAAkB4C,GAAlB,CAAsB,YAAtB;AACAi3B,MAAAA,OAAO,CAAC5B,kBAAR,CAA2B,YAA3B,EACK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAxBY;AAyBA/4B,MAAAA,QAAQ,CAACg5B,IAAT,CAAcC,WAAd,CAA0B0B,OAA1B;AACAA,MAAAA,OAAO,CAAC75B,SAAR,CAAkB4C,GAAlB,CAAsB,MAAtB;AACA1D,MAAAA,QAAQ,CAACg5B,IAAT,CAAcE,KAAd,CAAoBC,QAApB,GAA6B,QAA7B,CA9BwC,CAgCxC;;AACAC,MAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AACjC,YAAIA,KAAK,CAACjZ,MAAN,IAAgBsa,OAApB,EAA6B;AAC7BA,UAAAA,OAAO,CAACzB,KAAR,CAAcK,OAAd,GAAwB,MAAxB;AACC;AACA,OAJD;;AAKAH,MAAAA,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAiCnd,CAAC,IAAI;AAClC,YAAIA,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,eAAjB,CAAJ,EAAuC;AACnC,0CAAasC,OAAb;AACH,SAFD,MAEO,IAAIte,CAAC,CAACgE,MAAF,CAASgY,OAAT,CAAiB,yBAAjB,CAAJ,EAAiD;AACpD,0CAAasC,OAAb;AACH;AACJ,OAND;AAQAA,MAAAA,OAAO,CAACnB,gBAAR,CAAyB,QAAzB,EACInd,CAAC,IAAI;AACDA,QAAAA,CAAC,CAACod,cAAF;AACA,cAAMmB,IAAI,GAAGve,CAAC,CAACwe,aAAf;AACA,cAAMC,SAAS,GAAG;AACdtD,UAAAA,OAAO,EAAEoD,IAAI,CAACG,MAAL,CAAY/kB,KADP;AAEdyhB,UAAAA,SAAS,EAAEmD,IAAI,CAACI,SAAL,CAAehlB,KAFZ;AAGd0hB,UAAAA,QAAQ,EAAEkD,IAAI,CAACK,QAAL,CAAcjlB,KAHV;AAIdygB,UAAAA,QAAQ,EAAEmE,IAAI,CAAChE,YAAL,CAAkB5gB,KAJd;AAKduhB,UAAAA,EAAE,EAAEj1B,IAAI,CAAC0N,GAAL;AALU,SAAlB;AAOAqmB,QAAAA,MAAM,CAAC3oB,IAAP,CAAYotB,SAAZ;AACA,wCAAaH,OAAb;AACA3C,QAAAA,WAAW,GAZV,CAaD;;AACAj4B,4BAAW85B,aAAX,CAAyB,IAAIC,WAAJ,CAAgB,qBAAhB,CAAzB;AACH,OAhBL;AAiBH,KA/DM,CAAP;AAgEH,GAjED;;AAmEA,QAAMoB,gBAAgB,GAAG,MAAM;AAC3B;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACjQ,KAAL,CAAWkQ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAf;;AACA,QAAIH,MAAJ,EAAY;AACR9E,MAAAA,MAAM,GAAG8E,MAAT;AACAnD,MAAAA,WAAW;AACd;;AACDj4B,wBAAW85B,aAAX,CAAyB,IAAIC,WAAJ,CAAgB,qBAAhB,CAAzB;AACH,GARD;;AAUA,QAAMyB,kBAAkB,GAAG,MAAM;AAC7BF,IAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAepF,MAAf,CAA/B;AACH,GAFD;;AAIA,QAAMqF,YAAY,GAAIrF,MAAD,IAAY;AAC7B,UAAMsF,WAAW,GAAGx7B,iBAAQ6V,KAA5B;AACA,UAAM4lB,YAAY,GAAGvF,MAAM,CAAC3I,MAAP,CAAcmO,IAAI,IAAIA,IAAI,CAACpE,SAAL,CAAe/a,WAAf,GAA6Bof,QAA7B,CAAsCH,WAAW,CAACjf,WAAZ,EAAtC,CAAtB,CAArB;AACD,WAAOkf,YAAP;AACF,GAJD;;AAMA,QAAMG,aAAa,GAAI1F,MAAD,IAAY;AAC9B,UAAM2F,aAAa,GAAG57B,kBAAS4V,KAA/B;;AACA,QAAIgmB,aAAa,KAAK,OAAtB,EAA+B;AAC3B,aAAO3F,MAAP;AACH;;AACD,UAAM0F,aAAa,GAAG1F,MAAM,CAAC3I,MAAP,CAAcuO,GAAG,IAAI;AACvC,YAAMC,SAAS,GAAG,IAAI55B,IAAJ,CAAS25B,GAAG,CAACxF,QAAb,EAAuB0F,cAAvB,CAAsC,OAAtC,EAA+C;AAAE1vB,QAAAA,KAAK,EAAE;AAAT,OAA/C,CAAlB;AACA,aAAOyvB,SAAS,CAACxf,WAAV,GAAwBof,QAAxB,CAAiCE,aAAjC,CAAP;AACH,KAHqB,CAAtB;AAIA,WAAOD,aAAP;AACH,GAVD;;AAYA,WAASK,oBAAT,GAAgC;AAC5B,UAAMC,YAAY,GAAGX,YAAY,CAACrF,MAAD,CAAjC;AACA,UAAMiG,aAAa,GAAGP,aAAa,CAACM,YAAD,CAAnC;AACA,UAAME,IAAI,GAAG,6BAAcD,aAAd,CAAb;AACAv8B,wBAAWm4B,SAAX,GAAuBqE,IAAvB;AACH,GAvRsB,CAyRvB;AACA;AACA;AACA;AAEA;;;AACAx8B,sBAAWy5B,gBAAX,CAA4B,qBAA5B,EAAmD+B,kBAAnD;;AACAr7B,sBAAWs5B,gBAAX,CAA4B,OAA5B,EAAqCiB,YAArC;;AACA16B,sBAAWy5B,gBAAX,CAA4B,OAA5B,EAAqCrB,gBAArC;;AACAp4B,sBAAWy5B,gBAAX,CAA4B,OAA5B,EAAqCQ,kBAArC;;AACA75B,mBAAQq5B,gBAAR,CAAyB,OAAzB,EAAkC4C,oBAAlC;;AACAh8B,oBAASo5B,gBAAT,CAA0B,OAA1B,EAAmC4C,oBAAnC;;AACAlB,EAAAA,gBAAgB;AACnB;;AAEDvD,SAAS;;;AC9ST,IAAI6E,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACp6B,IAAV,CAAe,IAAf,EAAqBw6B,UAArB;AACA,OAAKC,GAAL,GAAW;AACTh9B,IAAAA,IAAI,EAAE48B,MAAM,CAACC,MAAP,CAAcI,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBtvB,IAAtB,CAA2ByvB,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTC,IAAAA,OAAO,EAAE,UAAUD,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBvvB,IAAvB,CAA4ByvB,EAA5B;AACD;AATQ,GAAX;AAYAT,EAAAA,MAAM,CAACC,MAAP,CAAcI,OAAd,GAAwB,IAAxB;AACD;;AAEDL,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGb,MAAM,CAACC,MAAP,CAAcY,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASxE,KAAT,EAAgB;AAC7B+D,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIx9B,IAAI,GAAGs7B,IAAI,CAACjQ,KAAL,CAAWmO,KAAK,CAACx5B,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACi+B,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAl+B,MAAAA,IAAI,CAACm+B,MAAL,CAAYv0B,OAAZ,CAAoB,UAASw0B,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAAC3G,EAA7B,CAA9B;;AACA,cAAI6G,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIl+B,IAAI,CAACm+B,MAAL,CAAYO,KAAZ,CAAkB,UAASN,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACH,IAAN,KAAe,KAAf,IAAwBG,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIV,OAAJ,EAAa;AACXx7B,QAAAA,OAAO,CAACm8B,KAAR;AAEA7+B,QAAAA,IAAI,CAACm+B,MAAL,CAAYv0B,OAAZ,CAAoB,UAAUw0B,KAAV,EAAiB;AACnCU,UAAAA,QAAQ,CAACN,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAZ,QAAAA,cAAc,CAAC5zB,OAAf,CAAuB,UAAUm1B,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIlB,QAAQ,CAACoB,MAAb,EAAqB;AAAE;AAC5BpB,QAAAA,QAAQ,CAACoB,MAAT;AACD;AACF;;AAED,QAAIj/B,IAAI,CAACi+B,IAAL,KAAc,QAAlB,EAA4B;AAC1BF,MAAAA,EAAE,CAACmB,KAAH;;AACAnB,MAAAA,EAAE,CAACoB,OAAH,GAAa,YAAY;AACvBtB,QAAAA,QAAQ,CAACoB,MAAT;AACD,OAFD;AAGD;;AAED,QAAIj/B,IAAI,CAACi+B,IAAL,KAAc,gBAAlB,EAAoC;AAClCv7B,MAAAA,OAAO,CAACu0B,GAAR,CAAY,2BAAZ;AAEAmI,MAAAA,kBAAkB;AACnB;;AAED,QAAIp/B,IAAI,CAACi+B,IAAL,KAAc,OAAlB,EAA2B;AACzBv7B,MAAAA,OAAO,CAAC28B,KAAR,CAAc,kBAAkBr/B,IAAI,CAACq/B,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8Ct/B,IAAI,CAACq/B,KAAL,CAAWx8B,KAAvE;AAEAu8B,MAAAA,kBAAkB;AAElB,UAAIG,OAAO,GAAGC,kBAAkB,CAACx/B,IAAD,CAAhC;AACAE,MAAAA,QAAQ,CAACg5B,IAAT,CAAcC,WAAd,CAA0BoG,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASH,kBAAT,GAA8B;AAC5B,MAAIG,OAAO,GAAGr/B,QAAQ,CAACu/B,cAAT,CAAwB/C,UAAxB,CAAd;;AACA,MAAI6C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACt+B,MAAR;AACD;AACF;;AAED,SAASu+B,kBAAT,CAA4Bx/B,IAA5B,EAAkC;AAChC,MAAIu/B,OAAO,GAAGr/B,QAAQ,CAAC84B,aAAT,CAAuB,KAAvB,CAAd;AACAuG,EAAAA,OAAO,CAAC9H,EAAR,GAAaiF,UAAb,CAFgC,CAIhC;;AACA,MAAI4C,OAAO,GAAGp/B,QAAQ,CAAC84B,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAI0G,UAAU,GAAGx/B,QAAQ,CAAC84B,aAAT,CAAuB,KAAvB,CAAjB;AACAsG,EAAAA,OAAO,CAACK,SAAR,GAAoB3/B,IAAI,CAACq/B,KAAL,CAAWC,OAA/B;AACAI,EAAAA,UAAU,CAACC,SAAX,GAAuB3/B,IAAI,CAACq/B,KAAL,CAAWx8B,KAAlC;AAEA08B,EAAAA,OAAO,CAACnH,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EkH,OAAO,CAAClH,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYsH,UAAU,CAACtH,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOmH,OAAP;AAED;;AAED,SAASK,UAAT,CAAoB/C,MAApB,EAA4BpF,EAA5B,EAAgC;AAC9B,MAAIoI,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAI9iB,CAAJ,EAAOnE,CAAP,EAAUknB,GAAV;;AAEA,OAAK/iB,CAAL,IAAU6iB,OAAV,EAAmB;AACjB,SAAKhnB,CAAL,IAAUgnB,OAAO,CAAC7iB,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvB+iB,MAAAA,GAAG,GAAGF,OAAO,CAAC7iB,CAAD,CAAP,CAAW,CAAX,EAAcnE,CAAd,CAAN;;AACA,UAAIknB,GAAG,KAAKtI,EAAR,IAAe5tB,KAAK,CAACujB,OAAN,CAAc2S,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACj+B,MAAJ,GAAa,CAAd,CAAH,KAAwB21B,EAAjE,EAAsE;AACpEqI,QAAAA,OAAO,CAAClyB,IAAR,CAAaoP,CAAb;AACD;AACF;AACF;;AAED,MAAI6f,MAAM,CAACY,MAAX,EAAmB;AACjBqC,IAAAA,OAAO,GAAGA,OAAO,CAAC3gB,MAAR,CAAeygB,UAAU,CAAC/C,MAAM,CAACY,MAAR,EAAgBhG,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOqI,OAAP;AACD;;AAED,SAAShB,QAAT,CAAkBjC,MAAlB,EAA0BuB,KAA1B,EAAiC;AAC/B,MAAIyB,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACzB,KAAK,CAAC3G,EAAP,CAAP,IAAqB,CAACoF,MAAM,CAACY,MAAjC,EAAyC;AACvC,QAAIJ,EAAE,GAAG,IAAI2C,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C5B,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACwB,OAAO,CAACzB,KAAK,CAAC3G,EAAP,CAAtB;AACAoI,IAAAA,OAAO,CAACzB,KAAK,CAAC3G,EAAP,CAAP,GAAoB,CAAC4F,EAAD,EAAKe,KAAK,CAAC6B,IAAX,CAApB;AACD,GAJD,MAIO,IAAIpD,MAAM,CAACY,MAAX,EAAmB;AACxBqB,IAAAA,QAAQ,CAACjC,MAAM,CAACY,MAAR,EAAgBW,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB1B,MAAxB,EAAgCpF,EAAhC,EAAoC;AAClC,MAAIoI,OAAO,GAAGhD,MAAM,CAACgD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACpI,EAAD,CAAR,IAAgBoF,MAAM,CAACY,MAA3B,EAAmC;AACjC,WAAOc,cAAc,CAAC1B,MAAM,CAACY,MAAR,EAAgBhG,EAAhB,CAArB;AACD;;AAED,MAAI8F,aAAa,CAAC9F,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACD8F,EAAAA,aAAa,CAAC9F,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIyI,MAAM,GAAGrD,MAAM,CAACsD,KAAP,CAAa1I,EAAb,CAAb;AAEA+F,EAAAA,cAAc,CAAC5vB,IAAf,CAAoB,CAACivB,MAAD,EAASpF,EAAT,CAApB;;AAEA,MAAIyI,MAAM,IAAIA,MAAM,CAAClD,GAAjB,IAAwBkD,MAAM,CAAClD,GAAP,CAAWE,gBAAX,CAA4Bp7B,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAO89B,UAAU,CAACpB,MAAM,CAACC,aAAR,EAAuBhH,EAAvB,CAAV,CAAqC2I,IAArC,CAA0C,UAAU3I,EAAV,EAAc;AAC7D,WAAO8G,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBhH,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASuH,YAAT,CAAsBnC,MAAtB,EAA8BpF,EAA9B,EAAkC;AAChC,MAAIyI,MAAM,GAAGrD,MAAM,CAACsD,KAAP,CAAa1I,EAAb,CAAb;AACAoF,EAAAA,MAAM,CAACI,OAAP,GAAiB,EAAjB;;AACA,MAAIiD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAAClD,GAAP,CAAWh9B,IAAX,GAAkB68B,MAAM,CAACI,OAAzB;AACD;;AAED,MAAIiD,MAAM,IAAIA,MAAM,CAAClD,GAAjB,IAAwBkD,MAAM,CAAClD,GAAP,CAAWG,iBAAX,CAA6Br7B,MAAzD,EAAiE;AAC/Do+B,IAAAA,MAAM,CAAClD,GAAP,CAAWG,iBAAX,CAA6BvzB,OAA7B,CAAqC,UAAUy2B,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACxD,MAAM,CAACI,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOJ,MAAM,CAACsD,KAAP,CAAa1I,EAAb,CAAP;AACAoF,EAAAA,MAAM,CAACpF,EAAD,CAAN;AAEAyI,EAAAA,MAAM,GAAGrD,MAAM,CAACsD,KAAP,CAAa1I,EAAb,CAAT;;AACA,MAAIyI,MAAM,IAAIA,MAAM,CAAClD,GAAjB,IAAwBkD,MAAM,CAAClD,GAAP,CAAWE,gBAAX,CAA4Bp7B,MAAxD,EAAgE;AAC9Do+B,IAAAA,MAAM,CAAClD,GAAP,CAAWE,gBAAX,CAA4BtzB,OAA5B,CAAoC,UAAUy2B,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"birthday.4fc5c73a.js","sourceRoot":"..","sourcesContent":["// fetching the data from people.json\r\nexport const data = `https://gist.githubusercontent.com/Pinois/e1c72b75917985dc77f5c808e876b67f/raw/b17e08696906abeaac8bc260f57738eaa3f6abb1/birthdayPeople.json`;\r\nexport const listOfData = document.querySelector('ul');\r\nexport const addDataBtn = document.querySelector('.add');\r\nexport const myInput = document.querySelector('.myInput');\r\nexport const getMonth = document.querySelector('.month');\r\nexport const inputSearch = document.querySelector('.inputSearch');\r\nexport const resetBtn = document.querySelector('.reset');","    // Destroy the popup\r\n    export function wait(ms = 0) {\r\n        return new Promise(resolve => setTimeout(resolve, ms))\r\n    }\r\n    export async function destroyPopup(popup) {\r\n        popup.classList.remove(\"open\");\r\n        await wait(1000); // Wait for 1 sec\r\n        popup.remove(); // remove it from the DOM\r\n        popup = null; // remove it from the javascript memory\r\n    }","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isSunday from \"../isSunday/index.js\";\nimport isSaturday from \"../isSaturday/index.js\";\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var startedOnWeekend = isWeekend(date);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n\n\n  if (startedOnWeekend && isWeekend(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if (isSaturday(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if (isSunday(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport setISOWeekYear from \"../setISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * const result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    inclusive: false\n  };\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isValid from \"../isValid/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * const result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from \"../getQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addISOWeekYears from \"../addISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * const result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarISOWeekYears from \"../differenceInCalendarISOWeekYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport subISOWeekYears from \"../subISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - isLastMonthNotFull);\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from \"../differenceInMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from \"../differenceInDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * var result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarYears from \"../differenceInCalendarYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear('1584');\n  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import addHours from \"../addHours/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name eachHourOfInterval\n * @category Interval Helpers\n * @summary Return the array of hours within the specified time interval.\n *\n * @description\n * Return the array of hours within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each hour between 6 October 2014, 12:00 and 10 October 2014, 15:00\n * var result = eachHourOfInterval({\n *   start: new Date(2014, 9, 6, 12),\n *   end: new Date(2014, 9, 6, 15)\n * })\n * //=> [\n * //   Mon Oct 06 2014 12:00:00,\n * //   Mon Oct 06 2014 13:00:00,\n * //   Mon Oct 06 2014 14:00:00,\n * //   Mon Oct 06 2014 15:00:00\n * // ]\n */\nexport default function eachHourOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setMinutes(0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addHours(currentDate, step);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n  var dates = []; // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addQuarters from \"../addQuarters/index.js\";\nimport startOfQuarter from \"../startOfQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * var result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\n\nexport default function eachQuarterOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = startOfQuarter(startDate);\n  var endDateQuarter = startOfQuarter(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push(toDate(currentQuarter));\n    currentQuarter = addQuarters(currentQuarter, 1);\n  }\n\n  return quarters;\n}","import addWeeks from \"../addWeeks/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import eachDayOfInterval from \"../eachDayOfInterval/index.js\";\nimport isSunday from \"../isSunday/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * const result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import eachWeekendOfInterval from \"../eachWeekendOfInterval/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * const result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate.getTime())) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from \"../eachWeekendOfInterval/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport endOfYear from \"../endOfYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * var result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from \"../endOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from \"../endOfDay/index.js\";\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import distanceInStrictWords from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInStrictWords(dirtyDate, Date.now(), dirtyOptions);\n}","import defaultLocale from \"../locale/en-US/index.js\";\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should be zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, null, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nexport default function formatDuration(duration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var format = options.format || defaultFormat;\n  var locale = options.locale || defaultLocale;\n  var zero = options.zero || false;\n  var delimiter = options.delimiter || ' ';\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);\n    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;\n  }, []).join(delimiter);\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISODuration\n * @category Common Helpers\n * @summary Format a duration object according as ISO 8601 duration string\n *\n * @description\n * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)\n *\n * @param {Duration} duration - the duration to format\n *\n * @returns {String} The ISO 8601 duration string\n * @throws {TypeError} Requires 1 argument\n * @throws {Error} Argument must be an object\n *\n * @example\n * // Format the given duration as ISO 8601 string\n * formatISODuration({\n *   years: 39,\n *   months: 2,\n *   days: 20,\n *   hours: 7,\n *   minutes: 5,\n *   seconds: 0\n * })\n * //=> 'P39Y2M20DT0H0M0S'\n */\n\nexport default function formatISODuration(duration) {\n  requiredArgs(1, arguments);\n  if (typeof duration !== 'object') throw new Error('Duration must be an object');\n  var _duration$years = duration.years,\n      years = _duration$years === void 0 ? 0 : _duration$years,\n      _duration$months = duration.months,\n      months = _duration$months === void 0 ? 0 : _duration$months,\n      _duration$days = duration.days,\n      days = _duration$days === void 0 ? 0 : _duration$days,\n      _duration$hours = duration.hours,\n      hours = _duration$hours === void 0 ? 0 : _duration$hours,\n      _duration$minutes = duration.minutes,\n      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n      _duration$seconds = duration.seconds,\n      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n  return \"P\".concat(years, \"Y\").concat(months, \"M\").concat(days, \"DT\").concat(hours, \"H\").concat(minutes, \"M\").concat(seconds, \"S\");\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\n\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var fractionDigits = options.fractionDigits == null ? 0 : toInteger(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(toInteger(absoluteOffset / 60), 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from \"../toDate/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport format from \"../format/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport startOfYear from \"../startOfYear/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from \"../toDate/index.js\";\nimport isLeapYear from \"../isLeapYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (String(new Date(date)) === 'Invalid Date') {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * const result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * const result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from \"../getTime/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from \"../getWeekYear/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from \"../getDate/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from \"../differenceInCalendarWeeks/index.js\";\nimport lastDayOfMonth from \"../lastDayOfMonth/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInYears from \"../differenceInYears/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInDays from \"../differenceInDays/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport sub from \"../sub/index.js\";\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name intlFormat\n * @category Common Helpers\n * @summary  Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).\n *\n * @description\n * Return the formatted date string in the given format.\n * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.\n * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)\n *\n * > ⚠️ Please note that before Node version 13.0.0, only the locale data for en-US is available by default.\n *\n * @param {Date|Number} argument - the original date.\n * @param {Object} [formatOptions] - an object with options.\n * @param {'lookup'|'best fit'} [formatOptions.localeMatcher='best fit'] - locale selection algorithm.\n * @param {'narrow'|'short'|'long'} [formatOptions.weekday] - representation the days of the week.\n * @param {'narrow'|'short'|'long'} [formatOptions.era] - representation of eras.\n * @param {'numeric'|'2-digit'} [formatOptions.year] - representation of years.\n * @param {'numeric'|'2-digit'|'narrow'|'short'|'long'} [formatOptions.month='numeric'] - representation of month.\n * @param {'numeric'|'2-digit'} [formatOptions.day='numeric'] - representation of day.\n * @param {'numeric'|'2-digit'} [formatOptions.hour='numeric'] - representation of hours.\n * @param {'numeric'|'2-digit'} [formatOptions.minute] - representation of minutes.\n * @param {'numeric'|'2-digit'} [formatOptions.second] - representation of seconds.\n * @param {'short'|'long'} [formatOptions.timeZoneName] - representation of names of time zones.\n * @param {'basic'|'best fit'} [formatOptions.formatMatcher='best fit'] - format selection algorithm.\n * @param {Boolean} [formatOptions.hour12] - determines whether to use 12-hour time format.\n * @param {String} [formatOptions.timeZone] - the time zone to use.\n * @param {Object} [localeOptions] - an object with locale.\n * @param {String|String[]} [localeOptions.locale] - the locale code\n * @returns {String} the formatted date string.\n * @throws {TypeError} 1 argument required.\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 10 October 2019 in German.\n * // Convert the date with format's options and locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      weekday: 'long',\n *      year: 'numeric',\n *      month: 'long',\n *      day: 'numeric',\n *    }, {\n *      locale: 'de-DE',\n *  })\n * //=> Freitag, 4. Oktober 2019\n *\n * @example\n * // Represent 10 October 2019.\n * // Convert the date with format's options.\n * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      year: 'numeric',\n *      month: 'numeric',\n *      day: 'numeric',\n *      hour: 'numeric',\n *  })\n * //=> 10/4/2019, 12 PM\n *\n * @example\n * // Represent 10 October 2019 in Korean.\n * // Convert the date with locale's options.\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {\n *      locale: 'ko-KR',\n *  })\n * //=> 2019. 10. 4.\n *\n * @example\n * // Represent 10 October 2019 in middle-endian format:\n * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))\n * //=> 10/4/2019\n */\nexport default function intlFormat(date, formatOrLocale, localeOptions) {\n  var _localeOptions;\n\n  requiredArgs(1, arguments);\n  var formatOptions;\n\n  if (isFormatOptions(formatOrLocale)) {\n    formatOptions = formatOrLocale;\n  } else {\n    localeOptions = formatOrLocale;\n  }\n\n  return new Intl.DateTimeFormat((_localeOptions = localeOptions) === null || _localeOptions === void 0 ? void 0 : _localeOptions.locale, formatOptions).format(date);\n}\n\nfunction isFormatOptions(opts) {\n  return opts !== undefined && !('locale' in opts);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import parse from \"../parse/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n *\n *\n * @param {String} dateString - the date string to verify\n * @param {String} formatString - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Boolean}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * var result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\n\nexport default function isMatch(dateString, formatString, dirtyOptions) {\n  requiredArgs(2, arguments);\n  return isValid(parse(dateString, formatString, new Date(), dirtyOptions));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(date) {\n  requiredArgs(1, arguments);\n  return toDate(date).getDay() === 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from \"../startOfHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import startOfMinute from \"../startOfMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import startOfQuarter from \"../startOfQuarter/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from \"../startOfSecond/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import isSameHour from \"../isSameHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from \"../isSameISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from \"../isSameMinute/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from \"../isSameMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from \"../isSameQuarter/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from \"../isSameSecond/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from \"../isSameYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import isSameDay from \"../isSameDay/index.js\";\nimport subDays from \"../subDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from \"../lastDayOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/lightFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n// Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n// 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\nvar yearInDays = 365.2425;\n/**\n * @name milliseconds\n * @category Millisecond Helpers\n * @summary Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * One month is a year devided by 12.\n *\n * @description\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n *\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // 1 year in milliseconds\n * milliseconds({ year: 1 })\n * //=> 31556952000\n *\n * // 3 months in milliseconds\n * milliseconds({ month: 3 })\n * //=> 7889238000\n */\n\nexport default function milliseconds(_ref) {\n  var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  requiredArgs(1, arguments);\n  var totalDays = 0;\n  if (years) totalDays += years * yearInDays;\n  if (months) totalDays += months * (yearInDays / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  var totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.round(totalSeconds * 1000);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n * - `2000-03-15T05:20:10Z`: Without milliseconds\n * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n * - A `Date` instance will be cloned\n * - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|(.)(\\d{2}):?(\\d{2})?)?/);\n\n    if (parts) {\n      // Group 8 matches the sign\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4] - (parts[9] || 0) * (parts[8] == '-' ? -1 : 1), +parts[5] - (parts[10] || 0) * (parts[8] == '-' ? -1 : 1), +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff, options);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport getISODay from \"../getISODay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getISOWeek from \"../getISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport setMonth from \"../setMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from \"../getWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * const result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addBusinessDays from \"../addBusinessDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addHours from \"../addHours/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * const result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMinutes from \"../addMinutes/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addQuarters from \"../addQuarters/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * const result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addSeconds from \"../addSeconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * const result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addYears from \"../addYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * const result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as add } from \"./add/index.js\";\nexport { default as addBusinessDays } from \"./addBusinessDays/index.js\";\nexport { default as addDays } from \"./addDays/index.js\";\nexport { default as addHours } from \"./addHours/index.js\";\nexport { default as addISOWeekYears } from \"./addISOWeekYears/index.js\";\nexport { default as addMilliseconds } from \"./addMilliseconds/index.js\";\nexport { default as addMinutes } from \"./addMinutes/index.js\";\nexport { default as addMonths } from \"./addMonths/index.js\";\nexport { default as addQuarters } from \"./addQuarters/index.js\";\nexport { default as addSeconds } from \"./addSeconds/index.js\";\nexport { default as addWeeks } from \"./addWeeks/index.js\";\nexport { default as addYears } from \"./addYears/index.js\";\nexport { default as areIntervalsOverlapping } from \"./areIntervalsOverlapping/index.js\";\nexport { default as closestIndexTo } from \"./closestIndexTo/index.js\";\nexport { default as closestTo } from \"./closestTo/index.js\";\nexport { default as compareAsc } from \"./compareAsc/index.js\";\nexport { default as compareDesc } from \"./compareDesc/index.js\";\nexport { default as differenceInBusinessDays } from \"./differenceInBusinessDays/index.js\";\nexport { default as differenceInCalendarDays } from \"./differenceInCalendarDays/index.js\";\nexport { default as differenceInCalendarISOWeekYears } from \"./differenceInCalendarISOWeekYears/index.js\";\nexport { default as differenceInCalendarISOWeeks } from \"./differenceInCalendarISOWeeks/index.js\";\nexport { default as differenceInCalendarMonths } from \"./differenceInCalendarMonths/index.js\";\nexport { default as differenceInCalendarQuarters } from \"./differenceInCalendarQuarters/index.js\";\nexport { default as differenceInCalendarWeeks } from \"./differenceInCalendarWeeks/index.js\";\nexport { default as differenceInCalendarYears } from \"./differenceInCalendarYears/index.js\";\nexport { default as differenceInDays } from \"./differenceInDays/index.js\";\nexport { default as differenceInHours } from \"./differenceInHours/index.js\";\nexport { default as differenceInISOWeekYears } from \"./differenceInISOWeekYears/index.js\";\nexport { default as differenceInMilliseconds } from \"./differenceInMilliseconds/index.js\";\nexport { default as differenceInMinutes } from \"./differenceInMinutes/index.js\";\nexport { default as differenceInMonths } from \"./differenceInMonths/index.js\";\nexport { default as differenceInQuarters } from \"./differenceInQuarters/index.js\";\nexport { default as differenceInSeconds } from \"./differenceInSeconds/index.js\";\nexport { default as differenceInWeeks } from \"./differenceInWeeks/index.js\";\nexport { default as differenceInYears } from \"./differenceInYears/index.js\";\nexport { default as eachDayOfInterval } from \"./eachDayOfInterval/index.js\";\nexport { default as eachHourOfInterval } from \"./eachHourOfInterval/index.js\";\nexport { default as eachMonthOfInterval } from \"./eachMonthOfInterval/index.js\";\nexport { default as eachQuarterOfInterval } from \"./eachQuarterOfInterval/index.js\";\nexport { default as eachWeekOfInterval } from \"./eachWeekOfInterval/index.js\";\nexport { default as eachWeekendOfInterval } from \"./eachWeekendOfInterval/index.js\";\nexport { default as eachWeekendOfMonth } from \"./eachWeekendOfMonth/index.js\";\nexport { default as eachWeekendOfYear } from \"./eachWeekendOfYear/index.js\";\nexport { default as eachYearOfInterval } from \"./eachYearOfInterval/index.js\";\nexport { default as endOfDay } from \"./endOfDay/index.js\";\nexport { default as endOfDecade } from \"./endOfDecade/index.js\";\nexport { default as endOfHour } from \"./endOfHour/index.js\";\nexport { default as endOfISOWeek } from \"./endOfISOWeek/index.js\";\nexport { default as endOfISOWeekYear } from \"./endOfISOWeekYear/index.js\";\nexport { default as endOfMinute } from \"./endOfMinute/index.js\";\nexport { default as endOfMonth } from \"./endOfMonth/index.js\";\nexport { default as endOfQuarter } from \"./endOfQuarter/index.js\";\nexport { default as endOfSecond } from \"./endOfSecond/index.js\";\nexport { default as endOfToday } from \"./endOfToday/index.js\";\nexport { default as endOfTomorrow } from \"./endOfTomorrow/index.js\";\nexport { default as endOfWeek } from \"./endOfWeek/index.js\";\nexport { default as endOfYear } from \"./endOfYear/index.js\";\nexport { default as endOfYesterday } from \"./endOfYesterday/index.js\";\nexport { default as format } from \"./format/index.js\";\nexport { default as formatDistance } from \"./formatDistance/index.js\";\nexport { default as formatDistanceStrict } from \"./formatDistanceStrict/index.js\";\nexport { default as formatDistanceToNow } from \"./formatDistanceToNow/index.js\";\nexport { default as formatDistanceToNowStrict } from \"./formatDistanceToNowStrict/index.js\";\nexport { default as formatDuration } from \"./formatDuration/index.js\";\nexport { default as formatISO } from \"./formatISO/index.js\";\nexport { default as formatISO9075 } from \"./formatISO9075/index.js\";\nexport { default as formatISODuration } from \"./formatISODuration/index.js\";\nexport { default as formatRFC3339 } from \"./formatRFC3339/index.js\";\nexport { default as formatRFC7231 } from \"./formatRFC7231/index.js\";\nexport { default as formatRelative } from \"./formatRelative/index.js\";\nexport { default as fromUnixTime } from \"./fromUnixTime/index.js\";\nexport { default as getDate } from \"./getDate/index.js\";\nexport { default as getDay } from \"./getDay/index.js\";\nexport { default as getDayOfYear } from \"./getDayOfYear/index.js\";\nexport { default as getDaysInMonth } from \"./getDaysInMonth/index.js\";\nexport { default as getDaysInYear } from \"./getDaysInYear/index.js\";\nexport { default as getDecade } from \"./getDecade/index.js\";\nexport { default as getHours } from \"./getHours/index.js\";\nexport { default as getISODay } from \"./getISODay/index.js\";\nexport { default as getISOWeek } from \"./getISOWeek/index.js\";\nexport { default as getISOWeekYear } from \"./getISOWeekYear/index.js\";\nexport { default as getISOWeeksInYear } from \"./getISOWeeksInYear/index.js\";\nexport { default as getMilliseconds } from \"./getMilliseconds/index.js\";\nexport { default as getMinutes } from \"./getMinutes/index.js\";\nexport { default as getMonth } from \"./getMonth/index.js\";\nexport { default as getOverlappingDaysInIntervals } from \"./getOverlappingDaysInIntervals/index.js\";\nexport { default as getQuarter } from \"./getQuarter/index.js\";\nexport { default as getSeconds } from \"./getSeconds/index.js\";\nexport { default as getTime } from \"./getTime/index.js\";\nexport { default as getUnixTime } from \"./getUnixTime/index.js\";\nexport { default as getWeek } from \"./getWeek/index.js\";\nexport { default as getWeekOfMonth } from \"./getWeekOfMonth/index.js\";\nexport { default as getWeekYear } from \"./getWeekYear/index.js\";\nexport { default as getWeeksInMonth } from \"./getWeeksInMonth/index.js\";\nexport { default as getYear } from \"./getYear/index.js\";\nexport { default as intervalToDuration } from \"./intervalToDuration/index.js\";\nexport { default as intlFormat } from \"./intlFormat/index.js\";\nexport { default as isAfter } from \"./isAfter/index.js\";\nexport { default as isBefore } from \"./isBefore/index.js\";\nexport { default as isDate } from \"./isDate/index.js\";\nexport { default as isEqual } from \"./isEqual/index.js\";\nexport { default as isExists } from \"./isExists/index.js\";\nexport { default as isFirstDayOfMonth } from \"./isFirstDayOfMonth/index.js\";\nexport { default as isFriday } from \"./isFriday/index.js\";\nexport { default as isFuture } from \"./isFuture/index.js\";\nexport { default as isLastDayOfMonth } from \"./isLastDayOfMonth/index.js\";\nexport { default as isLeapYear } from \"./isLeapYear/index.js\";\nexport { default as isMatch } from \"./isMatch/index.js\";\nexport { default as isMonday } from \"./isMonday/index.js\";\nexport { default as isPast } from \"./isPast/index.js\";\nexport { default as isSameDay } from \"./isSameDay/index.js\";\nexport { default as isSameHour } from \"./isSameHour/index.js\";\nexport { default as isSameISOWeek } from \"./isSameISOWeek/index.js\";\nexport { default as isSameISOWeekYear } from \"./isSameISOWeekYear/index.js\";\nexport { default as isSameMinute } from \"./isSameMinute/index.js\";\nexport { default as isSameMonth } from \"./isSameMonth/index.js\";\nexport { default as isSameQuarter } from \"./isSameQuarter/index.js\";\nexport { default as isSameSecond } from \"./isSameSecond/index.js\";\nexport { default as isSameWeek } from \"./isSameWeek/index.js\";\nexport { default as isSameYear } from \"./isSameYear/index.js\";\nexport { default as isSaturday } from \"./isSaturday/index.js\";\nexport { default as isSunday } from \"./isSunday/index.js\";\nexport { default as isThisHour } from \"./isThisHour/index.js\";\nexport { default as isThisISOWeek } from \"./isThisISOWeek/index.js\";\nexport { default as isThisMinute } from \"./isThisMinute/index.js\";\nexport { default as isThisMonth } from \"./isThisMonth/index.js\";\nexport { default as isThisQuarter } from \"./isThisQuarter/index.js\";\nexport { default as isThisSecond } from \"./isThisSecond/index.js\";\nexport { default as isThisWeek } from \"./isThisWeek/index.js\";\nexport { default as isThisYear } from \"./isThisYear/index.js\";\nexport { default as isThursday } from \"./isThursday/index.js\";\nexport { default as isToday } from \"./isToday/index.js\";\nexport { default as isTomorrow } from \"./isTomorrow/index.js\";\nexport { default as isTuesday } from \"./isTuesday/index.js\";\nexport { default as isValid } from \"./isValid/index.js\";\nexport { default as isWednesday } from \"./isWednesday/index.js\";\nexport { default as isWeekend } from \"./isWeekend/index.js\";\nexport { default as isWithinInterval } from \"./isWithinInterval/index.js\";\nexport { default as isYesterday } from \"./isYesterday/index.js\";\nexport { default as lastDayOfDecade } from \"./lastDayOfDecade/index.js\";\nexport { default as lastDayOfISOWeek } from \"./lastDayOfISOWeek/index.js\";\nexport { default as lastDayOfISOWeekYear } from \"./lastDayOfISOWeekYear/index.js\";\nexport { default as lastDayOfMonth } from \"./lastDayOfMonth/index.js\";\nexport { default as lastDayOfQuarter } from \"./lastDayOfQuarter/index.js\";\nexport { default as lastDayOfWeek } from \"./lastDayOfWeek/index.js\";\nexport { default as lastDayOfYear } from \"./lastDayOfYear/index.js\";\nexport { default as lightFormat } from \"./lightFormat/index.js\";\nexport { default as max } from \"./max/index.js\";\nexport { default as milliseconds } from \"./milliseconds/index.js\";\nexport { default as min } from \"./min/index.js\";\nexport { default as parse } from \"./parse/index.js\";\nexport { default as parseISO } from \"./parseISO/index.js\";\nexport { default as parseJSON } from \"./parseJSON/index.js\";\nexport { default as roundToNearestMinutes } from \"./roundToNearestMinutes/index.js\";\nexport { default as set } from \"./set/index.js\";\nexport { default as setDate } from \"./setDate/index.js\";\nexport { default as setDay } from \"./setDay/index.js\";\nexport { default as setDayOfYear } from \"./setDayOfYear/index.js\";\nexport { default as setHours } from \"./setHours/index.js\";\nexport { default as setISODay } from \"./setISODay/index.js\";\nexport { default as setISOWeek } from \"./setISOWeek/index.js\";\nexport { default as setISOWeekYear } from \"./setISOWeekYear/index.js\";\nexport { default as setMilliseconds } from \"./setMilliseconds/index.js\";\nexport { default as setMinutes } from \"./setMinutes/index.js\";\nexport { default as setMonth } from \"./setMonth/index.js\";\nexport { default as setQuarter } from \"./setQuarter/index.js\";\nexport { default as setSeconds } from \"./setSeconds/index.js\";\nexport { default as setWeek } from \"./setWeek/index.js\";\nexport { default as setWeekYear } from \"./setWeekYear/index.js\";\nexport { default as setYear } from \"./setYear/index.js\";\nexport { default as startOfDay } from \"./startOfDay/index.js\";\nexport { default as startOfDecade } from \"./startOfDecade/index.js\";\nexport { default as startOfHour } from \"./startOfHour/index.js\";\nexport { default as startOfISOWeek } from \"./startOfISOWeek/index.js\";\nexport { default as startOfISOWeekYear } from \"./startOfISOWeekYear/index.js\";\nexport { default as startOfMinute } from \"./startOfMinute/index.js\";\nexport { default as startOfMonth } from \"./startOfMonth/index.js\";\nexport { default as startOfQuarter } from \"./startOfQuarter/index.js\";\nexport { default as startOfSecond } from \"./startOfSecond/index.js\";\nexport { default as startOfToday } from \"./startOfToday/index.js\";\nexport { default as startOfTomorrow } from \"./startOfTomorrow/index.js\";\nexport { default as startOfWeek } from \"./startOfWeek/index.js\";\nexport { default as startOfWeekYear } from \"./startOfWeekYear/index.js\";\nexport { default as startOfYear } from \"./startOfYear/index.js\";\nexport { default as startOfYesterday } from \"./startOfYesterday/index.js\";\nexport { default as sub } from \"./sub/index.js\";\nexport { default as subBusinessDays } from \"./subBusinessDays/index.js\";\nexport { default as subDays } from \"./subDays/index.js\";\nexport { default as subHours } from \"./subHours/index.js\";\nexport { default as subISOWeekYears } from \"./subISOWeekYears/index.js\";\nexport { default as subMilliseconds } from \"./subMilliseconds/index.js\";\nexport { default as subMinutes } from \"./subMinutes/index.js\";\nexport { default as subMonths } from \"./subMonths/index.js\";\nexport { default as subQuarters } from \"./subQuarters/index.js\";\nexport { default as subSeconds } from \"./subSeconds/index.js\";\nexport { default as subWeeks } from \"./subWeeks/index.js\";\nexport { default as subYears } from \"./subYears/index.js\";\nexport { default as toDate } from \"./toDate/index.js\";\nexport * from \"./constants/index.js\";","import { format } from \"date-fns\";\r\n\r\nexport function generateLists(people) { \r\n    return people\r\n        .sort(function (a, b) {\r\n            function peopleBirthday(month, day) {\r\n                let today = new Date(),\r\n                currentYear = today.getFullYear(),\r\n                next = new Date(currentYear, month - 1, day);\r\n                today.setHours(0, 0, 0, 0);\r\n                if (today > next) next.setFullYear(currentYear + 1);\r\n                return Math.round((next - today) / 8.64e7);\r\n            }\r\n            let birthdayA = peopleBirthday(new Date(a.birthday).getMonth()+1,new Date(a.birthday).getDate());\r\n            let birthdayB = peopleBirthday(new Date(b.birthday).getMonth()+1,new Date(b.birthday).getDate());\r\n            return birthdayA - birthdayB;\r\n        })\r\n        .map(data => {\r\n            const today = new Date();           \r\n            const personBirthday = new Date(data.birthday);           \r\n            let birthdayDate = personBirthday.toISOString().slice(4)\r\n            const momentYear = today.getFullYear();\r\n            birthdayDate = momentYear + birthdayDate\r\n            console.log(birthdayDate);\r\n            const day = personBirthday.getDay();\r\n            const month = personBirthday.getMonth();\r\n            const year = personBirthday.getFullYear();\r\n            const peopleAge = today.getFullYear() - year;\r\n            const futureAge = peopleAge;\r\n            let oneDay = 1000 * 60 * 60 * 24;\r\n            \r\n            \r\n            const dayLeft = Math.round((new Date(birthdayDate).getTime() - today.getTime()) / (oneDay));\r\n            const birthdayInDays = dayLeft < 0 ? 365 + dayLeft : dayLeft; \r\n            \r\n            var monthNname = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n            ][month];\r\n            const formatedDate = format(new Date(personBirthday), \"do\")\r\n\r\n            return `\r\n            <li class='list-of-data' data-id=\"${data.id}\">\r\n                <div class=\"col-8 col-sm-6 picture\"><image src=\"${data.picture}\" alt=\"${data.firstName + ' ' + data.lastName}\"/></div>\r\n                <div class=\"names-and-date\">\r\n                    <div class=\"names\">\r\n                        <span class=\"col-8 col-sm-6 firstName\" id=\"name\">${data.firstName}</span>\r\n                        <span class=\"col-8 col-sm-6 lastName\">${data.lastName}</span>\r\n                    </div>\r\n                    <p class=\"date\">Turns <span class=\"future-age\">${futureAge}</span> on ${monthNname}<span> ${formatedDate}\r\n                    </span>\r\n                    </p>\r\n                </div>   \r\n                <div class=\"group-btn\">\r\n                    <div class=\"birthday-in-days\"><span>${birthdayInDays }days</span></div>\r\n                    <div class=\"buttons\">\r\n                        <button data-placement=\"top\" data-toggle=\"tooltip\" title=\"Edit\" data-id=\"${data.id}\" class=\"edit btn btn-primary btn-xs\" data-title=\"Edit\" data-toggle=\"modal\" data-target=\"#edit\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 25 25\" stroke=\"#094067\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                        </svg>\r\n                        </button>\r\n\r\n                        <button data-id=\"${data.id}\" class=\"delete\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#EF4565\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>            \r\n            </li>\r\n        `;\r\n        }).join('');\r\n    // tbody.innerHTML = html;\r\n};\r\n","import { data, listOfData, addDataBtn, myInput, getMonth, resetBtn } from './element.js';\r\nimport { wait, destroyPopup } from './destroyPopup.js';\r\nimport { generateLists } from './generate.js'\r\n\r\n\r\n// Function that fetch the data from people.json\r\nasync function fetchData() {\r\n    const response = await fetch(data);\r\n    const dataList = await response.json();\r\n    let people = dataList;\r\n\r\n    function displayList() {\r\n        const myHtml = generateLists(people);\r\n        \r\n        listOfData.innerHTML = myHtml;\r\n        \r\n    };\r\n    displayList();\r\n\r\n\r\n    // function that handle edit button and delete button\r\n    function handleEditPerson(e) {\r\n        const editBtn = e.target.closest('button.edit')\r\n        if (editBtn) {      \r\n            const editedId = editBtn.dataset.id;            \r\n            editPerson(editedId);\r\n        }\r\n    }\r\n    // Function for editing the form here\r\n    const editPerson = async (dataId) => {\r\n        const findPerson = people.find(person => person.id === dataId);\r\n        console.log(findPerson);\r\n        return new Promise(async function (resolve) {            \r\n            const birthdayDate = new Date(findPerson.birthday).toISOString().slice(0, 10);  \r\n            const maxDate = new Date().toISOString().slice(0, 10)\r\n            const popup = document.createElement('form');\r\n            popup.classList.add('to-edit');\r\n            popup.insertAdjacentHTML('afterbegin',\r\n                `\r\n            <div class=\"popup\">\r\n                <div class=\"inner-popup\">\r\n                    <h4 class=\"person-name\">Edit ${findPerson.firstName} <span>${findPerson.lastName} </h4>\r\n                    <label class=\"edit-label\" for=\"picture\">Picture</label>\r\n                    <input class=\"edit-input\" type=\"url\" name=\"picture\" value=\"${findPerson.picture}\">\r\n                    <label class=\"edit-label\" for=\"last-name\">Last name</label>\r\n                    <input class=\"edit-input\" type=\"text\" name=\"lastName\" value=\"${findPerson.lastName}\">\r\n                    <label class=\"edit-label\" for=\"first-name\">First name</label>\r\n                    <input class=\"edit-input\" type=\"text\" name=\"firstName\" value=\"${findPerson.firstName}\">\r\n                    <label class=\"edit-label\" for=\"birthday\">Birthday</label>\r\n                    <input class=\"edit-input\" type=\"date\" name=\"birthday\" value=\"${birthdayDate}\" max=\"${maxDate}\" >\r\n                    <div class=\"buttons\">\r\n                        <button type=\"submit\" class=\"btn submit\">Save</button>\r\n                        <button type=\"cancel\" class=\"btn cancel\">Cancel</button>\r\n                    </div>\r\n                    <button class=\"edit-close-btn\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                \r\n\t\t\t</div>\r\n    \t`\r\n            );\r\n            document.body.appendChild(popup);\r\n            await wait(50);\r\n            popup.classList.add('open');\r\n            document.body.style.overflow = 'hidden';\r\n           \r\n            // When the user clicks anywhere outside of the modal, close it\r\n            window.onclick = function(event) {\r\n                if (event.target == popup) {\r\n                popup.style.display = \"none\";\r\n                }\r\n                }\r\n            // Reject the change\r\n            window.addEventListener('click', e => {\r\n                if (e.target.closest('button.cancel')) {\r\n                    destroyPopup(popup);\r\n                    document.body.style.overflow = \"visible\";\r\n                } else if (e.target.closest('button.delete-close-btn')) {\r\n                    destroyPopup(popup);\r\n                    document.body.style.overflow = \"visible\";\r\n                    console.log(\"we deleted somte\");\r\n                }\r\n            })\r\n\r\n            popup.addEventListener('submit', e => {\r\n                e.preventDefault()\r\n                findPerson.picture = popup.picture.value;\r\n                findPerson.lastName = popup.lastName.value; \r\n                findPerson.firstName = popup.firstName.value; \r\n                const toTimestamp=(strDate)=>{\r\n                    var datum = Date.parse(strDate);\r\n                    return datum;\r\n                 } \r\n                findPerson.birthday = toTimestamp(popup.birthday.value);\r\n                people.forEach(person => {\r\n                    if (person.id === findPerson.id ) {\r\n                        person = findPerson\r\n                    }\r\n                });\r\n                    displayList(findPerson);\r\n\r\n                resolve(popup.remove());\r\n                destroyPopup(popup);\r\n                listOfData.dispatchEvent(new CustomEvent('pleaseUpdateTheList'));\r\n            }, { once: true });\r\n        });\r\n    };\r\n\r\n    // function for deleting item here\r\n    function handleDeletePerson(e) {\r\n        const deleteBtn = e.target.closest('button.delete')\r\n        if (deleteBtn) {\r\n            const deleteId = deleteBtn.dataset.id;            \r\n            deleteDataForm(deleteId);\r\n        }\r\n    };\r\n\r\n    const deleteDataForm = (idToDelete) => {\r\n        // const deleteButton = people.filter(el => el.id !== idToDelete);\r\n        console.log(idToDelete);\r\n        return new Promise(async function (resolve) {\r\n            const dataToDelete = document.createElement('div');\r\n            dataToDelete.classList.add('to-delete');\r\n            dataToDelete.insertAdjacentHTML('afterbegin',\r\n                `\r\n            <div class=\"to-deleteEl\">\r\n                <p> ⚠ </p>\r\n                <p> Do you want to remove this person from the list?\r\n                </p>\r\n                <button class=\"remove\">Yes</button>\r\n                <button type=\"cancel\" class=\"cancel\">No</button>\r\n                <button class=\"delete-close-btn\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                </button>\r\n\t\t\t</div>\r\n        `);\r\n\r\n            window.addEventListener('click', e => {\r\n                if (e.target.closest('button.cancel')) {\r\n                    destroyPopup(dataToDelete);\r\n                } else if (e.target.closest('button.delete-close-btn')) {\r\n                    destroyPopup(dataToDelete);\r\n                }\r\n            });\r\n\r\n            window.addEventListener('click', e => {\r\n                e.preventDefault()\r\n                if (e.target.closest('button.remove')) {\r\n                    const removeData = people.filter(el => el.id != idToDelete);\r\n                    const deleteFindData = removeData;\r\n                    people = deleteFindData;\r\n                    displayList(deleteFindData);\r\n                    destroyPopup(dataToDelete);\r\n                }\r\n            })\r\n            document.body.appendChild(dataToDelete);\r\n            dataToDelete.classList.add('open');\r\n            document.body.style.overflow=\"hidden\";\r\n            // When the user clicks anywhere outside of the modal, close it\r\n            window.onclick = function(event) {\r\n                if (event.target == dataToDelete) {\r\n                dataToDelete.style.display = \"none\";\r\n                }\r\n            }\r\n            document.body.style.overflow=\"visible\"\r\n            listOfData.dispatchEvent(new CustomEvent('pleaseUpdateTheList'));\r\n        });\r\n    };\r\n\r\n    const addNewPerson = (e) => {\r\n        if (e.target.closest('button.add')) {\r\n            addData();\r\n        }\r\n    };\r\n\r\n\r\n    const addData = id => {\r\n        return new Promise(async function (resolve) {\r\n            const newData = document.createElement('form');\r\n            newData.classList.add('add-person');\r\n            newData.insertAdjacentHTML('afterbegin',\r\n                `\r\n            <div class=\"to-add\">\r\n                <div class=\"inner-popup\">\r\n                    <h4 class=\"add-title\">Add somebody</h4>\r\n                    <label  class=\"add-label\"for=\"picture\">Picture</label>\r\n                    <input class=\"add-input\" placeholder=\"Enter Url..\" type=\"url\" id=\"avatar\" name=\"avatar\" required>\r\n                    <label class=\"add-label\" for=\"last-name\">Last name</label>\r\n                    <input class=\"add-input\" placeholder=\"What's your last name?\" type=\"text\" id=\"lastName\" name=\"lastname\" required>\r\n                    <label class=\"add-label\" for=\"first-name\">First name</label>\r\n                    <input class=\"add-input\" placeholder=\"What's your first name? \" type=\"text\" id=\"firstName\" name=\"firstname\" required>\r\n                    <label class=\"add-label\" for=\"birthday\">Birthday</label>\r\n                    <input class=\"add-input\" placeholder=\"Enter your birthday \" type=\"date\" id=\"birthday\" name=\"birthdayDate\" required>\r\n                    <div>\r\n                        <button type=\"cancel\" class=\"btn cancel\">Cancel</button>\r\n                        <button type=\"submit\" class=\" btn submit\">Save</button>\r\n                    </div>\r\n                    <button class=\"add-close-btn close-modal\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>  \r\n        `);\r\n            document.body.appendChild(newData);\r\n            newData.classList.add('open');\r\n            document.body.style.overflow=\"hidden\"\r\n\r\n            // When the user clicks anywhere outside of the modal, close it\r\n            window.onclick = function(event) {\r\n            if (event.target == newData) {\r\n            newData.style.display = \"none\";\r\n            }\r\n            }\r\n            window.addEventListener('click', e => {\r\n                if (e.target.closest('button.cancel')) {\r\n                    destroyPopup(newData);\r\n                } else if (e.target.closest('button.delete-close-btn')) {\r\n                    destroyPopup(newData);\r\n                }\r\n            })\r\n\r\n            newData.addEventListener('submit',\r\n                e => {\r\n                    e.preventDefault();\r\n                    const form = e.currentTarget;\r\n                    const newPerson = {\r\n                        picture: form.avatar.value,\r\n                        firstName: form.firstname.value,\r\n                        lastName: form.lastname.value,\r\n                        birthday: form.birthdayDate.value,\r\n                        id: Date.now()\r\n                    };\r\n                    people.push(newPerson);\r\n                    destroyPopup(newData);\r\n                    displayList();\r\n                    // form.reset();\r\n                    listOfData.dispatchEvent(new CustomEvent('pleaseUpdateTheList'));\r\n                });\r\n        })\r\n    };\r\n\r\n    const initLocalStorage = () => {\r\n        //Check if there is something in the local storage\r\n        const lsData = JSON.parse(localStorage.getItem('people'));\r\n        if (lsData) {\r\n            people = lsData;\r\n            displayList();\r\n        }\r\n        listOfData.dispatchEvent(new CustomEvent('pleaseUpdateTheList'));\r\n    };\r\n\r\n    const updateLocalStorage = () => {\r\n        localStorage.setItem('people', JSON.stringify(people));\r\n    };\r\n\r\n    const filteredName = (people) => {\r\n        const listOfInput = myInput.value;\r\n        const filteredList = people.filter(item => item.firstName.toLowerCase().includes(listOfInput.toLowerCase()));\r\n       return filteredList;\r\n    };\r\n\r\n    const filteredMonth = (people) => {\r\n        const selectedMonth = getMonth.value;\r\n        if (selectedMonth === \"Empty\") {\r\n            return people\r\n        }\r\n        const filteredMonth = people.filter(mth => {\r\n            const fullMonth = new Date(mth.birthday).toLocaleString('en-US', { month: 'long' });\r\n            return fullMonth.toLowerCase().includes(selectedMonth);\r\n        });\r\n        return filteredMonth\r\n    };\r\n\r\n    function filteredMonthAndName() {\r\n        const nameFiltered = filteredName(people)\r\n        const monthFiltered = filteredMonth(nameFiltered) \r\n        const HTML = generateLists(monthFiltered);\r\n        listOfData.innerHTML = HTML;\r\n    }\r\n\r\n    // const resetFilters = e => {\r\n    //     inputSearch.reset();\r\n    //     displayList();\r\n    // };\r\n\r\n    // resetBtn.addEventListener('click', resetFilters);\r\n    listOfData.addEventListener('pleaseUpdateTheList', updateLocalStorage);\r\n    addDataBtn.addEventListener('click', addNewPerson);\r\n    listOfData.addEventListener('click', handleEditPerson);\r\n    listOfData.addEventListener('click', handleDeletePerson);\r\n    myInput.addEventListener('input', filteredMonthAndName);\r\n    getMonth.addEventListener('input', filteredMonthAndName);   \r\n    initLocalStorage();\r\n}\r\n\r\nfetchData()","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}